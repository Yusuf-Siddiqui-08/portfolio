<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/main.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/main.py" />
              <option name="originalContent" value="from flask import Flask, render_template, jsonify, send_from_directory, request, Response&#10;from flask_caching import Cache&#10;from waitress import serve&#10;import os&#10;import time&#10;import requests&#10;# --- new imports ---&#10;import sqlite3&#10;from html import escape&#10;from datetime import datetime, timezone&#10;&#10;# Try to import psycopg (PostgreSQL driver); optional for local SQLite&#10;try:&#10;    import psycopg  # psycopg3&#10;except Exception:  # pragma: no cover&#10;    psycopg = None&#10;&#10;app = Flask(__name__)&#10;&#10;# Version string to bust browser cache for static assets&#10;ASSET_VERSION = os.getenv(&quot;ASSET_VERSION&quot;) or str(int(time.time()))&#10;&#10;@app.context_processor&#10;def inject_asset_version():&#10;    return {&quot;ASSET_VERSION&quot;: ASSET_VERSION}&#10;&#10;# Simple in-memory cache; good enough for small deployments&#10;cache = Cache(app, config={&quot;CACHE_TYPE&quot;: &quot;SimpleCache&quot;, &quot;CACHE_DEFAULT_TIMEOUT&quot;: 300})&#10;&#10;# --- SQLite/PostgreSQL helpers ---&#10;DB_PATH = os.getenv(&quot;DB_PATH&quot;) or os.path.join(app.root_path, &quot;app.db&quot;)&#10;&#10;&#10;def _get_pg_dsn():&#10;    &quot;&quot;&quot;Build a PostgreSQL DSN from env vars, preferring DATABASE_URL.&quot;&quot;&quot;&#10;    url = os.getenv(&quot;DATABASE_URL&quot;)&#10;    if url:&#10;        return url&#10;    host = os.getenv(&quot;PGHOST&quot;)&#10;    if not host:&#10;        return None&#10;    parts = [&#10;        f&quot;host={host}&quot;,&#10;        f&quot;port={os.getenv('PGPORT', '5432')}&quot;,&#10;        f&quot;dbname={os.getenv('PGDATABASE')}&quot;,&#10;        f&quot;user={os.getenv('PGUSER')}&quot;,&#10;        f&quot;password={os.getenv('PGPASSWORD')}&quot;,&#10;    ]&#10;    sslmode = os.getenv(&quot;PGSSLMODE&quot;) or os.getenv(&quot;DATABASE_SSLMODE&quot;)&#10;    if sslmode:&#10;        parts.append(f&quot;sslmode={sslmode}&quot;)&#10;    # Filter missing values like dbname=None&#10;    return &quot; &quot;.join(p for p in parts if p and not p.endswith(&quot;=None&quot;))&#10;&#10;&#10;def _is_postgres() -&gt; bool:&#10;    return psycopg is not None and _get_pg_dsn() is not None&#10;&#10;&#10;def _get_db():&#10;    # Use Postgres on Railway (or wherever DATABASE_URL/PG* provided), else SQLite locally&#10;    if _is_postgres():&#10;        return psycopg.connect(_get_pg_dsn())&#10;    # Use check_same_thread=False to be safe under threaded servers; each usage is short-lived&#10;    return sqlite3.connect(DB_PATH, check_same_thread=False)&#10;&#10;&#10;def _init_db():&#10;    with _get_db() as conn:&#10;        # Use a cursor for compatibility across drivers&#10;        cur = conn.cursor()&#10;        if _is_postgres():&#10;            cur.execute(&#10;                &quot;&quot;&quot;&#10;                CREATE TABLE IF NOT EXISTS contact_messages (&#10;                    id SERIAL PRIMARY KEY,&#10;                    name TEXT NOT NULL,&#10;                    email TEXT NOT NULL,&#10;                    message TEXT NOT NULL,&#10;                    created_at BIGINT NOT NULL,&#10;                    ip TEXT,&#10;                    ua TEXT&#10;                )&#10;                &quot;&quot;&quot;&#10;            )&#10;        else:&#10;            cur.execute(&#10;                &quot;&quot;&quot;&#10;                CREATE TABLE IF NOT EXISTS contact_messages (&#10;                    id INTEGER PRIMARY KEY AUTOINCREMENT,&#10;                    name TEXT NOT NULL,&#10;                    email TEXT NOT NULL,&#10;                    message TEXT NOT NULL,&#10;                    created_at INTEGER NOT NULL,&#10;                    ip TEXT,&#10;                    ua TEXT&#10;                )&#10;                &quot;&quot;&quot;&#10;            )&#10;        try:&#10;            conn.commit()&#10;        except Exception:&#10;            pass&#10;&#10;_init_db()&#10;&#10;# Log which DB is being used (avoid printing secrets)&#10;try:&#10;    if _is_postgres():&#10;        print(&quot;[startup] Using PostgreSQL (DATABASE_URL detected)&quot;)&#10;    else:&#10;        print(f&quot;[startup] Using SQLite at {DB_PATH}&quot;)&#10;except Exception:&#10;    pass&#10;&#10;&#10;def _fetch_github_repos(username: str):&#10;    &quot;&quot;&quot;&#10;    Fetch repositories for the given GitHub username with retry, timeout, and caching.&#10;    Caches only successful responses.&#10;    &quot;&quot;&quot;&#10;    cache_key = f&quot;github_repos:{username}&quot;&#10;    cached = cache.get(cache_key)&#10;    if cached is not None:&#10;        return cached, None  # (data, error)&#10;&#10;    url = f&quot;https://api.github.com/users/{username}/repos&quot;&#10;    params = {&quot;sort&quot;: &quot;updated&quot;, &quot;per_page&quot;: 20}&#10;    headers = {&#10;        &quot;Accept&quot;: &quot;application/vnd.github+json&quot;,&#10;        &quot;User-Agent&quot;: &quot;PortfolioApp/1.0 (+https://yusufsiddiqui.dev)&quot;,&#10;    }&#10;&#10;    max_attempts = 3&#10;    backoff = 1.0  # seconds&#10;    last_error = None&#10;&#10;    for attempt in range(1, max_attempts + 1):&#10;        try:&#10;            resp = requests.get(url, params=params, headers=headers, timeout=7)&#10;            status = resp.status_code&#10;&#10;            if status == 200:&#10;                data = resp.json()&#10;                cache.set(cache_key, data, timeout=300)&#10;                return data, None&#10;&#10;            # Rate-limit or explicit throttling&#10;            if status in (403, 429):&#10;                retry_after = resp.headers.get(&quot;Retry-After&quot;)&#10;                reset = resp.headers.get(&quot;X-RateLimit-Reset&quot;)&#10;                msg = &quot;GitHub API rate limit reached&quot;&#10;                if retry_after:&#10;                    msg += f&quot;; retry after {retry_after}s&quot;&#10;                elif reset:&#10;                    try:&#10;                        reset_in = max(0, int(reset) - int(time.time()))&#10;                        msg += f&quot;; retry in ~{reset_in}s&quot;&#10;                    except Exception:&#10;                        pass&#10;                last_error = {&quot;type&quot;: &quot;rate_limited&quot;, &quot;status&quot;: status, &quot;message&quot;: msg}&#10;                break  # don't keep hammering on rate limits&#10;&#10;            # Transient server errors; retry with backoff&#10;            if 500 &lt;= status &lt; 600:&#10;                last_error = {&#10;                    &quot;type&quot;: &quot;upstream_error&quot;,&#10;                    &quot;status&quot;: status,&#10;                    &quot;message&quot;: f&quot;GitHub returned {status}&quot;,&#10;                }&#10;                if attempt &lt; max_attempts:&#10;                    time.sleep(backoff)&#10;                    backoff *= 2&#10;                    continue&#10;                break&#10;&#10;            # Other non-success statuses; don't retry&#10;            last_error = {&#10;                &quot;type&quot;: &quot;bad_status&quot;,&#10;                &quot;status&quot;: status,&#10;                &quot;message&quot;: f&quot;GitHub returned {status}&quot;,&#10;            }&#10;            break&#10;&#10;        except requests.Timeout:&#10;            last_error = {&quot;type&quot;: &quot;timeout&quot;, &quot;status&quot;: 504, &quot;message&quot;: &quot;Request timed out&quot;}&#10;            if attempt &lt; max_attempts:&#10;                time.sleep(backoff)&#10;                backoff *= 2&#10;                continue&#10;            break&#10;&#10;        except requests.RequestException as e:&#10;            last_error = {&#10;                &quot;type&quot;: &quot;request_exception&quot;,&#10;                &quot;status&quot;: 502,&#10;                &quot;message&quot;: str(e),&#10;            }&#10;            if attempt &lt; max_attempts:&#10;                time.sleep(backoff)&#10;                backoff *= 2&#10;                continue&#10;            break&#10;&#10;    return None, last_error&#10;&#10;&#10;@app.route(&quot;/&quot;)&#10;def home():  # put application's code here&#10;    return render_template(&quot;index.html&quot;)&#10;&#10;&#10;@app.route(&quot;/repos&quot;)&#10;def repos():&#10;    return render_template(&quot;repos.html&quot;)&#10;&#10;&#10;@app.route(&quot;/contact&quot;)&#10;def contact():&#10;    return render_template(&quot;contact.html&quot;)&#10;&#10;&#10;@app.route(&quot;/api/github/repos&quot;)&#10;def api_github_repos():&#10;    &quot;&quot;&quot;&#10;    Server-side endpoint to fetch GitHub repos to avoid exposing the GitHub API directly to clients.&#10;    Supports optional ?username= query param, falling back to GITHUB_USERNAME env or a default.&#10;    &quot;&quot;&quot;&#10;    username = request.args.get(&quot;username&quot;) or os.getenv(&quot;GITHUB_USERNAME&quot;, &quot;Yusuf-Siddiqui-08&quot;)&#10;&#10;    data, error = _fetch_github_repos(username)&#10;    if error:&#10;        status = error.get(&quot;status&quot;, 502)&#10;        return (&#10;            jsonify(&#10;                {&#10;                    &quot;ok&quot;: False,&#10;                    &quot;error&quot;: error.get(&quot;type&quot;, &quot;unknown&quot;),&#10;                    &quot;message&quot;: error.get(&quot;message&quot;, &quot;Unknown error&quot;),&#10;                    &quot;username&quot;: username,&#10;                }&#10;            ),&#10;            status if isinstance(status, int) and status &gt;= 400 else 502,&#10;        )&#10;&#10;    return jsonify({&quot;ok&quot;: True, &quot;username&quot;: username, &quot;repos&quot;: data})&#10;&#10;&#10;# --- Contact form API: POST /api/contact ---&#10;@app.post(&quot;/api/contact&quot;)&#10;def api_contact():&#10;    data = request.get_json(silent=True) or request.form&#10;&#10;    # Honeypot field (bots often fill this); ignore silently&#10;    if (data.get(&quot;website&quot;) or &quot;&quot;).strip():&#10;        return jsonify({&quot;ok&quot;: True}), 200&#10;&#10;    name = (data.get(&quot;name&quot;) or &quot;&quot;).strip()&#10;    email = (data.get(&quot;email&quot;) or &quot;&quot;).strip()&#10;    message = (data.get(&quot;message&quot;) or &quot;&quot;).strip()&#10;&#10;    if not name or &quot;@&quot; not in email or len(message) &lt; 5:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: &quot;validation_error&quot;}), 400&#10;&#10;    # Simple IP rate limit: 5 submissions per hour&#10;    ip = request.headers.get(&quot;X-Forwarded-For&quot;, request.remote_addr) or &quot;unknown&quot;&#10;    rl_key = f&quot;rl:contact:{ip}&quot;&#10;    count = cache.get(rl_key) or 0&#10;    if count &gt;= 5:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: &quot;rate_limited&quot;}), 429&#10;    cache.set(rl_key, count + 1, timeout=3600)&#10;&#10;    ts = int(time.time())&#10;    ua = request.headers.get(&quot;User-Agent&quot;, &quot;&quot;)&#10;    with _get_db() as conn:&#10;        if _is_postgres():&#10;            cur = conn.cursor()&#10;            cur.execute(&#10;                &quot;&quot;&quot;&#10;                INSERT INTO contact_messages (name, email, message, created_at, ip, ua)&#10;                VALUES (%s, %s, %s, %s, %s, %s)&#10;                RETURNING id&#10;                &quot;&quot;&quot;,&#10;                (name, email, message, ts, ip, ua),&#10;            )&#10;            row = cur.fetchone()&#10;            msg_id = row[0] if row else None&#10;            try:&#10;                conn.commit()&#10;            except Exception:&#10;                pass&#10;        else:&#10;            cur = conn.execute(&#10;                &quot;INSERT INTO contact_messages (name, email, message, created_at, ip, ua) VALUES (?, ?, ?, ?, ?, ?)&quot;,&#10;                (name, email, message, ts, ip, ua),&#10;            )&#10;            msg_id = cur.lastrowid&#10;&#10;    return jsonify({&quot;ok&quot;: True, &quot;id&quot;: msg_id}), 201&#10;&#10;&#10;# --- Repo search API: GET /api/search?q=term&amp;username=optional ---&#10;@app.get(&quot;/api/search&quot;)&#10;def api_search():&#10;    q = (request.args.get(&quot;q&quot;) or &quot;&quot;).strip()&#10;    if not q:&#10;        return jsonify({&quot;ok&quot;: True, &quot;results&quot;: []})&#10;&#10;    username = request.args.get(&quot;username&quot;) or os.getenv(&quot;GITHUB_USERNAME&quot;, &quot;Yusuf-Siddiqui-08&quot;)&#10;    data, error = _fetch_github_repos(username)&#10;    if error:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: error.get(&quot;type&quot;), &quot;message&quot;: error.get(&quot;message&quot;)}), 502&#10;&#10;    ql = q.lower()&#10;    results = []&#10;    for r in data:&#10;        text = &quot; &quot;.join([&#10;            r.get(&quot;name&quot;) or &quot;&quot;,&#10;            r.get(&quot;description&quot;) or &quot;&quot;,&#10;            r.get(&quot;language&quot;) or &quot;&quot;,&#10;            &quot; &quot;.join(r.get(&quot;topics&quot;) or []),&#10;        ]).lower()&#10;        if ql in text:&#10;            results.append({&#10;                &quot;name&quot;: r.get(&quot;name&quot;),&#10;                &quot;html_url&quot;: r.get(&quot;html_url&quot;),&#10;                &quot;description&quot;: r.get(&quot;description&quot;),&#10;                &quot;language&quot;: r.get(&quot;language&quot;),&#10;                &quot;stars&quot;: r.get(&quot;stargazers_count&quot;, 0),&#10;                &quot;updated_at&quot;: r.get(&quot;pushed_at&quot;) or r.get(&quot;updated_at&quot;),&#10;            })&#10;&#10;    results.sort(key=lambda x: (x[&quot;stars&quot;], x[&quot;updated_at&quot;] or &quot;&quot;), reverse=True)&#10;    return jsonify({&quot;ok&quot;: True, &quot;count&quot;: len(results), &quot;results&quot;: results[:10]})&#10;&#10;&#10;# --- RSS feed: GET /feed.xml ---&#10;&#10;def _to_rfc2822(iso_ts: str) -&gt; str:&#10;    try:&#10;        dt = datetime.fromisoformat((iso_ts or &quot;&quot;).replace(&quot;Z&quot;, &quot;+00:00&quot;))&#10;    except Exception:&#10;        dt = datetime.now(timezone.utc)&#10;    return dt.strftime(&quot;%a, %d %b %Y %H:%M:%S %z&quot;)&#10;&#10;&#10;@app.get(&quot;/feed.xml&quot;)&#10;def feed_xml():&#10;    username = os.getenv(&quot;GITHUB_USERNAME&quot;, &quot;Yusuf-Siddiqui-08&quot;)&#10;    data, error = _fetch_github_repos(username)&#10;    if error:&#10;        return Response(&quot;Service Unavailable&quot;, status=503, mimetype=&quot;text/plain&quot;)&#10;&#10;    # Top 10 by last update&#10;    repos = sorted(&#10;        data,&#10;        key=lambda r: r.get(&quot;pushed_at&quot;) or r.get(&quot;updated_at&quot;) or &quot;&quot;,&#10;        reverse=True&#10;    )[:10]&#10;&#10;    site_title = f&quot;{username}'s updates&quot;&#10;    site_link = request.url_root.rstrip(&quot;/&quot;)&#10;    items = []&#10;    for r in repos:&#10;        title = escape(r.get(&quot;name&quot;) or &quot;Repository&quot;)&#10;        link = escape(r.get(&quot;html_url&quot;) or site_link)&#10;        desc = escape(r.get(&quot;description&quot;) or &quot;&quot;)&#10;        pub_date = _to_rfc2822(r.get(&quot;pushed_at&quot;) or r.get(&quot;updated_at&quot;) or &quot;&quot;)&#10;        items.append(f&quot;&quot;&quot;&#10;            &lt;item&gt;&#10;                &lt;title&gt;{title}&lt;/title&gt;&#10;                &lt;link&gt;{link}&lt;/link&gt;&#10;                &lt;guid isPermaLink=\&quot;true\&quot;&gt;{link}&lt;/guid&gt;&#10;                &lt;pubDate&gt;{pub_date}&lt;/pubDate&gt;&#10;                &lt;description&gt;{desc}&lt;/description&gt;&#10;            &lt;/item&gt;&#10;        &quot;&quot;&quot;.strip())&#10;&#10;    xml = f&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;rss version=&quot;2.0&quot;&gt;&#10;&lt;channel&gt;&#10;&lt;title&gt;{escape(site_title)}&lt;/title&gt;&#10;&lt;link&gt;{site_link}&lt;/link&gt;&#10;&lt;description&gt;Latest updated repositories&lt;/description&gt;&#10;{''.join(items)}&#10;&lt;/channel&gt;&#10;&lt;/rss&gt;&quot;&quot;&quot;&#10;    resp = Response(xml, mimetype=&quot;application/rss+xml&quot;)&#10;    # Cache feed in clients/CDN for 5 minutes&#10;    resp.headers[&quot;Cache-Control&quot;] = &quot;public, max-age=300&quot;&#10;    return resp&#10;&#10;&#10;@app.route(&quot;/project_images/&lt;path:filename&gt;&quot;)&#10;def project_images(filename):&#10;    directory = os.path.join(app.root_path, &quot;project_images&quot;)&#10;    return send_from_directory(directory, filename)&#10;&#10;&#10;@app.get(&quot;/api/health&quot;)&#10;def api_health():&#10;    try:&#10;        with _get_db() as conn:&#10;            cur = conn.cursor()&#10;            cur.execute(&quot;SELECT 1&quot;)&#10;            one = cur.fetchone()&#10;        return jsonify({&#10;            &quot;ok&quot;: True,&#10;            &quot;db&quot;: &quot;postgres&quot; if _is_postgres() else &quot;sqlite&quot;,&#10;            &quot;select1&quot;: one[0] if one else None,&#10;        }), 200&#10;    except Exception as e:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: str(e)}), 500&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    host = os.getenv(&quot;HOST&quot;, &quot;0.0.0.0&quot;)&#10;    port = int(os.getenv(&quot;PORT&quot;, &quot;8080&quot;))&#10;    serve(app, host=host, port=port)&#10;" />
              <option name="updatedContent" value="from flask import Flask, render_template, jsonify, send_from_directory, request, Response&#10;from flask_caching import Cache&#10;from waitress import serve&#10;import os&#10;import time&#10;import requests&#10;import sqlite3&#10;from html import escape&#10;from datetime import datetime, timezone&#10;&#10;# Try to import psycopg (PostgreSQL driver); optional for local SQLite&#10;try:&#10;    import psycopg  # psycopg3&#10;except Exception:  # pragma: no cover&#10;    psycopg = None&#10;&#10;app = Flask(__name__)&#10;&#10;# Version string to bust browser cache for static assets&#10;ASSET_VERSION = os.getenv(&quot;ASSET_VERSION&quot;) or str(int(time.time()))&#10;&#10;@app.context_processor&#10;def inject_asset_version():&#10;    return {&quot;ASSET_VERSION&quot;: ASSET_VERSION}&#10;&#10;# Simple in-memory cache; good enough for small deployments&#10;cache = Cache(app, config={&quot;CACHE_TYPE&quot;: &quot;SimpleCache&quot;, &quot;CACHE_DEFAULT_TIMEOUT&quot;: 300})&#10;&#10;DB_PATH = os.getenv(&quot;DB_PATH&quot;) or os.path.join(app.root_path, &quot;app.db&quot;)&#10;&#10;&#10;def _get_pg_dsn():&#10;    &quot;&quot;&quot;Build a PostgreSQL DSN from env vars, preferring DATABASE_URL.&quot;&quot;&quot;&#10;    url = os.getenv(&quot;DATABASE_URL&quot;)&#10;    if url:&#10;        return url&#10;    host = os.getenv(&quot;PGHOST&quot;)&#10;    if not host:&#10;        return None&#10;    parts = [&#10;        f&quot;host={host}&quot;,&#10;        f&quot;port={os.getenv('PGPORT', '5432')}&quot;,&#10;        f&quot;dbname={os.getenv('PGDATABASE')}&quot;,&#10;        f&quot;user={os.getenv('PGUSER')}&quot;,&#10;        f&quot;password={os.getenv('PGPASSWORD')}&quot;,&#10;    ]&#10;    sslmode = os.getenv(&quot;PGSSLMODE&quot;) or os.getenv(&quot;DATABASE_SSLMODE&quot;)&#10;    if sslmode:&#10;        parts.append(f&quot;sslmode={sslmode}&quot;)&#10;    # Filter missing values like dbname=None&#10;    return &quot; &quot;.join(p for p in parts if p and not p.endswith(&quot;=None&quot;))&#10;&#10;&#10;def _is_postgres() -&gt; bool:&#10;    return psycopg is not None and _get_pg_dsn() is not None&#10;&#10;&#10;def _get_db():&#10;    # Use Postgres on Railway (or wherever DATABASE_URL/PG* provided), else SQLite locally&#10;    if _is_postgres():&#10;        return psycopg.connect(_get_pg_dsn())&#10;    # Use check_same_thread=False to be safe under threaded servers; each usage is short-lived&#10;    return sqlite3.connect(DB_PATH, check_same_thread=False)&#10;&#10;&#10;def _init_db():&#10;    with _get_db() as conn:&#10;        # Use a cursor for compatibility across drivers&#10;        cur = conn.cursor()&#10;        if _is_postgres():&#10;            cur.execute(&#10;                &quot;&quot;&quot;&#10;                CREATE TABLE IF NOT EXISTS contact_messages (&#10;                    id SERIAL PRIMARY KEY,&#10;                    name TEXT NOT NULL,&#10;                    email TEXT NOT NULL,&#10;                    message TEXT NOT NULL,&#10;                    created_at BIGINT NOT NULL,&#10;                    ip TEXT,&#10;                    ua TEXT&#10;                )&#10;                &quot;&quot;&quot;&#10;            )&#10;        else:&#10;            cur.execute(&#10;                &quot;&quot;&quot;&#10;                CREATE TABLE IF NOT EXISTS contact_messages (&#10;                    id INTEGER PRIMARY KEY AUTOINCREMENT,&#10;                    name TEXT NOT NULL,&#10;                    email TEXT NOT NULL,&#10;                    message TEXT NOT NULL,&#10;                    created_at INTEGER NOT NULL,&#10;                    ip TEXT,&#10;                    ua TEXT&#10;                )&#10;                &quot;&quot;&quot;&#10;            )&#10;        try:&#10;            conn.commit()&#10;        except Exception:&#10;            pass&#10;&#10;_init_db()&#10;&#10;# Log which DB is being used (avoid printing secrets)&#10;try:&#10;    if _is_postgres():&#10;        print(&quot;[startup] Using PostgreSQL (DATABASE_URL detected)&quot;)&#10;    else:&#10;        print(f&quot;[startup] Using SQLite at {DB_PATH}&quot;)&#10;except Exception:&#10;    pass&#10;&#10;&#10;def _fetch_github_repos(username: str):&#10;    &quot;&quot;&quot;&#10;    Fetch repositories for the given GitHub username with retry, timeout, and caching.&#10;    Caches only successful responses.&#10;    &quot;&quot;&quot;&#10;    cache_key = f&quot;github_repos:{username}&quot;&#10;    cached = cache.get(cache_key)&#10;    if cached is not None:&#10;        return cached, None  # (data, error)&#10;&#10;    url = f&quot;https://api.github.com/users/{username}/repos&quot;&#10;    params = {&quot;sort&quot;: &quot;updated&quot;, &quot;per_page&quot;: 20}&#10;    headers = {&#10;        &quot;Accept&quot;: &quot;application/vnd.github+json&quot;,&#10;        &quot;User-Agent&quot;: &quot;PortfolioApp/1.0 (+https://yusufsiddiqui.dev)&quot;,&#10;    }&#10;&#10;    max_attempts = 3&#10;    backoff = 1.0  # seconds&#10;    last_error = None&#10;&#10;    for attempt in range(1, max_attempts + 1):&#10;        try:&#10;            resp = requests.get(url, params=params, headers=headers, timeout=7)&#10;            status = resp.status_code&#10;&#10;            if status == 200:&#10;                data = resp.json()&#10;                cache.set(cache_key, data, timeout=300)&#10;                return data, None&#10;&#10;            # Rate-limit or explicit throttling&#10;            if status in (403, 429):&#10;                retry_after = resp.headers.get(&quot;Retry-After&quot;)&#10;                reset = resp.headers.get(&quot;X-RateLimit-Reset&quot;)&#10;                msg = &quot;GitHub API rate limit reached&quot;&#10;                if retry_after:&#10;                    msg += f&quot;; retry after {retry_after}s&quot;&#10;                elif reset:&#10;                    try:&#10;                        reset_in = max(0, int(reset) - int(time.time()))&#10;                        msg += f&quot;; retry in ~{reset_in}s&quot;&#10;                    except Exception:&#10;                        pass&#10;                last_error = {&quot;type&quot;: &quot;rate_limited&quot;, &quot;status&quot;: status, &quot;message&quot;: msg}&#10;                break  # don't keep hammering on rate limits&#10;&#10;            # Transient server errors; retry with backoff&#10;            if 500 &lt;= status &lt; 600:&#10;                last_error = {&#10;                    &quot;type&quot;: &quot;upstream_error&quot;,&#10;                    &quot;status&quot;: status,&#10;                    &quot;message&quot;: f&quot;GitHub returned {status}&quot;,&#10;                }&#10;                if attempt &lt; max_attempts:&#10;                    time.sleep(backoff)&#10;                    backoff *= 2&#10;                    continue&#10;                break&#10;&#10;            # Other non-success statuses; don't retry&#10;            last_error = {&#10;                &quot;type&quot;: &quot;bad_status&quot;,&#10;                &quot;status&quot;: status,&#10;                &quot;message&quot;: f&quot;GitHub returned {status}&quot;,&#10;            }&#10;            break&#10;&#10;        except requests.Timeout:&#10;            last_error = {&quot;type&quot;: &quot;timeout&quot;, &quot;status&quot;: 504, &quot;message&quot;: &quot;Request timed out&quot;}&#10;            if attempt &lt; max_attempts:&#10;                time.sleep(backoff)&#10;                backoff *= 2&#10;                continue&#10;            break&#10;&#10;        except requests.RequestException as e:&#10;            last_error = {&#10;                &quot;type&quot;: &quot;request_exception&quot;,&#10;                &quot;status&quot;: 502,&#10;                &quot;message&quot;: str(e),&#10;            }&#10;            if attempt &lt; max_attempts:&#10;                time.sleep(backoff)&#10;                backoff *= 2&#10;                continue&#10;            break&#10;&#10;    return None, last_error&#10;&#10;&#10;@app.route(&quot;/&quot;)&#10;def home():  # put application's code here&#10;    return render_template(&quot;index.html&quot;)&#10;&#10;&#10;@app.route(&quot;/repos&quot;)&#10;def repos():&#10;    return render_template(&quot;repos.html&quot;)&#10;&#10;&#10;@app.route(&quot;/contact&quot;)&#10;def contact():&#10;    return render_template(&quot;contact.html&quot;)&#10;&#10;&#10;@app.route(&quot;/api/github/repos&quot;)&#10;def api_github_repos():&#10;    &quot;&quot;&quot;&#10;    Server-side endpoint to fetch GitHub repos to avoid exposing the GitHub API directly to clients.&#10;    Supports optional ?username= query param, falling back to GITHUB_USERNAME env or a default.&#10;    &quot;&quot;&quot;&#10;    username = request.args.get(&quot;username&quot;) or os.getenv(&quot;GITHUB_USERNAME&quot;, &quot;Yusuf-Siddiqui-08&quot;)&#10;&#10;    data, error = _fetch_github_repos(username)&#10;    if error:&#10;        status = error.get(&quot;status&quot;, 502)&#10;        return (&#10;            jsonify(&#10;                {&#10;                    &quot;ok&quot;: False,&#10;                    &quot;error&quot;: error.get(&quot;type&quot;, &quot;unknown&quot;),&#10;                    &quot;message&quot;: error.get(&quot;message&quot;, &quot;Unknown error&quot;),&#10;                    &quot;username&quot;: username,&#10;                }&#10;            ),&#10;            status if isinstance(status, int) and status &gt;= 400 else 502,&#10;        )&#10;&#10;    return jsonify({&quot;ok&quot;: True, &quot;username&quot;: username, &quot;repos&quot;: data})&#10;&#10;&#10;@app.post(&quot;/api/contact&quot;)&#10;def api_contact():&#10;    data = request.get_json(silent=True) or request.form&#10;&#10;    # Honeypot field (bots often fill this); ignore silently&#10;    if (data.get(&quot;website&quot;) or &quot;&quot;).strip():&#10;        return jsonify({&quot;ok&quot;: True}), 200&#10;&#10;    name = (data.get(&quot;name&quot;) or &quot;&quot;).strip()&#10;    email = (data.get(&quot;email&quot;) or &quot;&quot;).strip()&#10;    message = (data.get(&quot;message&quot;) or &quot;&quot;).strip()&#10;&#10;    if not name or &quot;@&quot; not in email or len(message) &lt; 5:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: &quot;validation_error&quot;}), 400&#10;&#10;    # Simple IP rate limit: 5 submissions per hour&#10;    ip = request.headers.get(&quot;X-Forwarded-For&quot;, request.remote_addr) or &quot;unknown&quot;&#10;    rl_key = f&quot;rl:contact:{ip}&quot;&#10;    count = cache.get(rl_key) or 0&#10;    if count &gt;= 5:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: &quot;rate_limited&quot;}), 429&#10;    cache.set(rl_key, count + 1, timeout=3600)&#10;&#10;    ts = int(time.time())&#10;    ua = request.headers.get(&quot;User-Agent&quot;, &quot;&quot;)&#10;    with _get_db() as conn:&#10;        if _is_postgres():&#10;            cur = conn.cursor()&#10;            cur.execute(&#10;                &quot;&quot;&quot;&#10;                INSERT INTO contact_messages (name, email, message, created_at, ip, ua)&#10;                VALUES (%s, %s, %s, %s, %s, %s)&#10;                RETURNING id&#10;                &quot;&quot;&quot;,&#10;                (name, email, message, ts, ip, ua),&#10;            )&#10;            row = cur.fetchone()&#10;            msg_id = row[0] if row else None&#10;            try:&#10;                conn.commit()&#10;            except Exception:&#10;                pass&#10;        else:&#10;            cur = conn.execute(&#10;                &quot;INSERT INTO contact_messages (name, email, message, created_at, ip, ua) VALUES (?, ?, ?, ?, ?, ?)&quot;,&#10;                (name, email, message, ts, ip, ua),&#10;            )&#10;            msg_id = cur.lastrowid&#10;&#10;    return jsonify({&quot;ok&quot;: True, &quot;id&quot;: msg_id}), 201&#10;&#10;&#10;@app.get(&quot;/api/search&quot;)&#10;def api_search():&#10;    q = (request.args.get(&quot;q&quot;) or &quot;&quot;).strip()&#10;    if not q:&#10;        return jsonify({&quot;ok&quot;: True, &quot;results&quot;: []})&#10;&#10;    username = request.args.get(&quot;username&quot;) or os.getenv(&quot;GITHUB_USERNAME&quot;, &quot;Yusuf-Siddiqui-08&quot;)&#10;    data, error = _fetch_github_repos(username)&#10;    if error:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: error.get(&quot;type&quot;), &quot;message&quot;: error.get(&quot;message&quot;)}), 502&#10;&#10;    ql = q.lower()&#10;    results = []&#10;    for r in data:&#10;        text = &quot; &quot;.join([&#10;            r.get(&quot;name&quot;) or &quot;&quot;,&#10;            r.get(&quot;description&quot;) or &quot;&quot;,&#10;            r.get(&quot;language&quot;) or &quot;&quot;,&#10;            &quot; &quot;.join(r.get(&quot;topics&quot;) or []),&#10;        ]).lower()&#10;        if ql in text:&#10;            results.append({&#10;                &quot;name&quot;: r.get(&quot;name&quot;),&#10;                &quot;html_url&quot;: r.get(&quot;html_url&quot;),&#10;                &quot;description&quot;: r.get(&quot;description&quot;),&#10;                &quot;language&quot;: r.get(&quot;language&quot;),&#10;                &quot;stars&quot;: r.get(&quot;stargazers_count&quot;, 0),&#10;                &quot;updated_at&quot;: r.get(&quot;pushed_at&quot;) or r.get(&quot;updated_at&quot;),&#10;            })&#10;&#10;    results.sort(key=lambda x: (x[&quot;stars&quot;], x[&quot;updated_at&quot;] or &quot;&quot;), reverse=True)&#10;    return jsonify({&quot;ok&quot;: True, &quot;count&quot;: len(results), &quot;results&quot;: results[:10]})&#10;&#10;&#10;def _to_rfc2822(iso_ts: str) -&gt; str:&#10;    try:&#10;        dt = datetime.fromisoformat((iso_ts or &quot;&quot;).replace(&quot;Z&quot;, &quot;+00:00&quot;))&#10;    except Exception:&#10;        dt = datetime.now(timezone.utc)&#10;    return dt.strftime(&quot;%a, %d %b %Y %H:%M:%S %z&quot;)&#10;&#10;&#10;@app.get(&quot;/feed.xml&quot;)&#10;def feed_xml():&#10;    username = os.getenv(&quot;GITHUB_USERNAME&quot;, &quot;Yusuf-Siddiqui-08&quot;)&#10;    data, error = _fetch_github_repos(username)&#10;    if error:&#10;        return Response(&quot;Service Unavailable&quot;, status=503, mimetype=&quot;text/plain&quot;)&#10;&#10;    # Top 10 by last update&#10;    repos = sorted(&#10;        data,&#10;        key=lambda r: r.get(&quot;pushed_at&quot;) or r.get(&quot;updated_at&quot;) or &quot;&quot;,&#10;        reverse=True&#10;    )[:10]&#10;&#10;    site_title = f&quot;{username}'s updates&quot;&#10;    site_link = request.url_root.rstrip(&quot;/&quot;)&#10;    items = []&#10;    for r in repos:&#10;        title = escape(r.get(&quot;name&quot;) or &quot;Repository&quot;)&#10;        link = escape(r.get(&quot;html_url&quot;) or site_link)&#10;        desc = escape(r.get(&quot;description&quot;) or &quot;&quot;)&#10;        pub_date = _to_rfc2822(r.get(&quot;pushed_at&quot;) or r.get(&quot;updated_at&quot;) or &quot;&quot;)&#10;        items.append(f&quot;&quot;&quot;&#10;            &lt;item&gt;&#10;                &lt;title&gt;{title}&lt;/title&gt;&#10;                &lt;link&gt;{link}&lt;/link&gt;&#10;                &lt;guid isPermaLink=\&quot;true\&quot;&gt;{link}&lt;/guid&gt;&#10;                &lt;pubDate&gt;{pub_date}&lt;/pubDate&gt;&#10;                &lt;description&gt;{desc}&lt;/description&gt;&#10;            &lt;/item&gt;&#10;        &quot;&quot;&quot;.strip())&#10;&#10;    xml = f&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;rss version=&quot;2.0&quot;&gt;&#10;&lt;channel&gt;&#10;&lt;title&gt;{escape(site_title)}&lt;/title&gt;&#10;&lt;link&gt;{site_link}&lt;/link&gt;&#10;&lt;description&gt;Latest updated repositories&lt;/description&gt;&#10;{''.join(items)}&#10;&lt;/channel&gt;&#10;&lt;/rss&gt;&quot;&quot;&quot;&#10;    resp = Response(xml, mimetype=&quot;application/rss+xml&quot;)&#10;    # Cache feed in clients/CDN for 5 minutes&#10;    resp.headers[&quot;Cache-Control&quot;] = &quot;public, max-age=300&quot;&#10;    return resp&#10;&#10;&#10;@app.route(&quot;/project_images/&lt;path:filename&gt;&quot;)&#10;def project_images(filename):&#10;    directory = os.path.join(app.root_path, &quot;project_images&quot;)&#10;    return send_from_directory(directory, filename)&#10;&#10;&#10;@app.get(&quot;/api/health&quot;)&#10;def api_health():&#10;    try:&#10;        with _get_db() as conn:&#10;            cur = conn.cursor()&#10;            cur.execute(&quot;SELECT 1&quot;)&#10;            one = cur.fetchone()&#10;        return jsonify({&#10;            &quot;ok&quot;: True,&#10;            &quot;db&quot;: &quot;postgres&quot; if _is_postgres() else &quot;sqlite&quot;,&#10;            &quot;select1&quot;: one[0] if one else None,&#10;        }), 200&#10;    except Exception as e:&#10;        return jsonify({&quot;ok&quot;: False, &quot;error&quot;: str(e)}), 500&#10;&#10;&#10;if __name__ == &quot;__main__&quot;:&#10;    host = os.getenv(&quot;HOST&quot;, &quot;0.0.0.0&quot;)&#10;    port = int(os.getenv(&quot;PORT&quot;, &quot;8080&quot;))&#10;    serve(app, host=host, port=port)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/requirements.txt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/requirements.txt" />
              <option name="originalContent" value="flask&#10;requests&#10;flask-caching&#10;waitress" />
              <option name="updatedContent" value="flask&#10;requests&#10;flask-caching&#10;waitress&#10;psycopg[binary]&gt;=3.1" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/static/repos.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/static/repos.js" />
              <option name="originalContent" value="'use strict';&#10;&#10;document.addEventListener('DOMContentLoaded', () =&gt; {&#10;  // Set current year if footer element exists&#10;  const yearEl = document.getElementById('year');&#10;  if (yearEl) {&#10;    yearEl.textContent = new Date().getFullYear();&#10;  }&#10;&#10;  // Initialize carousels&#10;  initCarousels();&#10;&#10;  // Initialize button ripple/splash tracking&#10;  initButtonRipples();&#10;&#10;  fetchRepos();&#10;});&#10;&#10;// Carousel functionality&#10;function initCarousels() {&#10;  function initCarousel(root) {&#10;    const track = root.querySelector('.carousel-track');&#10;    const slides = Array.from(root.querySelectorAll('.slide'));&#10;    const prevBtn = root.querySelector('.carousel-btn.prev');&#10;    const nextBtn = root.querySelector('.carousel-btn.next');&#10;    if (!track || slides.length === 0) return;&#10;    let index = 0;&#10;    function update() {&#10;      track.style.transform = 'translateX(' + (-index * 100) + '%)';&#10;    }&#10;    function prev() { index = (index - 1 + slides.length) % slides.length; update(); }&#10;    function next() { index = (index + 1) % slides.length; update(); }&#10;    if (prevBtn) prevBtn.addEventListener('click', prev);&#10;    if (nextBtn) nextBtn.addEventListener('click', next);&#10;    // Keyboard support when carousel receives focus&#10;    root.setAttribute('tabindex', '0');&#10;    root.addEventListener('keydown', (e) =&gt; {&#10;      if (e.key === 'ArrowLeft') { prev(); }&#10;      if (e.key === 'ArrowRight') { next(); }&#10;    });&#10;    update();&#10;  }&#10;  document.querySelectorAll('[data-carousel]').forEach(initCarousel);&#10;}&#10;&#10;// Button ripple hover effect: track mouse position within each .btn and set CSS vars&#10;function initButtonRipples() {&#10;  const buttons = Array.from(document.querySelectorAll('.btn'));&#10;  buttons.forEach((btn) =&gt; {&#10;    if (btn.dataset.rippleInit === '1') return;&#10;    btn.dataset.rippleInit = '1';&#10;    &#10;    // Create ripple element for liquid glass effect&#10;    if (!btn.querySelector('.ripple')) {&#10;      const ripple = document.createElement('span');&#10;      ripple.className = 'ripple';&#10;      btn.appendChild(ripple);&#10;    }&#10;    &#10;    // Wrap inner HTML to keep content above the ripple&#10;    if (!btn.querySelector('.btn-content')) {&#10;      const span = document.createElement('span');&#10;      span.className = 'btn-content';&#10;      while (btn.firstChild &amp;&amp; btn.firstChild !== btn.querySelector('.ripple')) {&#10;        span.appendChild(btn.firstChild);&#10;      }&#10;      btn.appendChild(span);&#10;    }&#10;    &#10;    btn.addEventListener('mousemove', (e) =&gt; {&#10;      const rect = btn.getBoundingClientRect();&#10;      // Compute a scale large enough to cover button diagonal&#10;      const maxDim = Math.max(rect.width, rect.height);&#10;      const diag = Math.sqrt(rect.width * rect.width + rect.height * rect.height);&#10;      const scale = (diag / 16) + 2; // 16 is base ripple size; add padding&#10;      btn.style.setProperty('--r-scale', String(Math.ceil(scale)));&#10;      const x = e.clientX - rect.left;&#10;      const y = e.clientY - rect.top;&#10;      btn.style.setProperty('--mouse-x', x + 'px');&#10;      btn.style.setProperty('--mouse-y', y + 'px');&#10;      // Keep ripple fully expanded while hovered&#10;      btn.classList.add('rippling');&#10;    });&#10;    // On keyboard focus, center the splash&#10;    btn.addEventListener('focus', () =&gt; {&#10;      btn.style.setProperty('--mouse-x', '50%');&#10;      btn.style.setProperty('--mouse-y', '50%');&#10;    });&#10;    // Clean up vars when leaving&#10;    btn.addEventListener('mouseleave', () =&gt; {&#10;      // Let ripple remain at last position and fade out smoothly even off-button&#10;      btn.classList.remove('rippling');&#10;      btn.classList.add('rippling-out');&#10;      if (btn._rippleCleanupTimer) {&#10;        clearTimeout(btn._rippleCleanupTimer);&#10;      }&#10;      btn._rippleCleanupTimer = window.setTimeout(() =&gt; {&#10;        btn.classList.remove('rippling-out');&#10;        btn.style.removeProperty('--mouse-x');&#10;        btn.style.removeProperty('--mouse-y');&#10;        btn.style.removeProperty('--r-scale');&#10;        btn._rippleCleanupTimer = null;&#10;      }, 500);&#10;    });&#10;  });&#10;}&#10;&#10;// Image Modal Functions&#10;function openImageModal(src, alt) {&#10;  const modal = document.getElementById('imageModal');&#10;  const modalImg = document.getElementById('modalImage');&#10;  const caption = document.getElementById('modalCaption');&#10;&#10;  modal.style.display = 'block';&#10;  modalImg.src = src;&#10;  modalImg.alt = alt;&#10;  caption.textContent = alt;&#10;&#10;  // Prevent body scrolling when modal is open&#10;  document.body.style.overflow = 'hidden';&#10;}&#10;&#10;function closeImageModal() {&#10;  const modal = document.getElementById('imageModal');&#10;  modal.style.display = 'none';&#10;&#10;  // Restore body scrolling&#10;  document.body.style.overflow = 'auto';&#10;}&#10;&#10;// Close modal on Escape key&#10;document.addEventListener('keydown', function(e) {&#10;  if (e.key === 'Escape') {&#10;    closeImageModal();&#10;  }&#10;});&#10;&#10;// Make functions globally available for onclick handlers&#10;window.openImageModal = openImageModal;&#10;window.closeImageModal = closeImageModal;&#10;&#10;async function fetchRepos() {&#10;  const statusEl = document.getElementById('status');&#10;  const container = document.getElementById('repo-container');&#10;&#10;  if (!statusEl || !container) return;&#10;&#10;  try {&#10;    const response = await fetch('https://api.github.com/users/Yusuf-Siddiqui-08/repos?sort=updated&amp;per_page=100');&#10;    if (!response.ok) {&#10;      throw new Error('GitHub API request failed with status ' + response.status);&#10;    }&#10;    const repos = await response.json();&#10;&#10;    if (!Array.isArray(repos) || repos.length === 0) {&#10;      statusEl.textContent = 'No repositories found.';&#10;      return;&#10;    }&#10;&#10;    statusEl.textContent = '';&#10;&#10;    // Render repositories&#10;    const fragment = document.createDocumentFragment();&#10;    repos.forEach(repo =&gt; {&#10;      const card = document.createElement('article');&#10;      card.className = 'repo-card';&#10;&#10;      // Single prominent button containing the repo name with GitHub icon&#10;      const link = document.createElement('a');&#10;      link.href = repo.html_url;&#10;      link.target = '_blank';&#10;      link.rel = 'noopener';&#10;      link.className = 'btn repo-button';&#10;      link.innerHTML = `&#10;        &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;          &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;            &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;          &lt;/svg&gt;&#10;          &lt;span&gt;${repo.name}&lt;/span&gt;&#10;        &lt;/span&gt;&#10;      `;&#10;&#10;      const desc = document.createElement('p');&#10;      desc.className = 'note';&#10;      desc.style.margin = '10px 0 12px 0';&#10;      desc.textContent = repo.description || 'No description provided.';&#10;&#10;      const meta = document.createElement('div');&#10;      meta.style.display = 'flex';&#10;      meta.style.flexWrap = 'wrap';&#10;      meta.style.gap = '10px';&#10;      meta.style.fontSize = '14px';&#10;      meta.style.color = 'var(--text-dim)';&#10;&#10;      const pieces = [];&#10;&#10;      if (repo.language) pieces.push('Language: ' + repo.language);&#10;      pieces.push('Stars: ' + (repo.stargazers_count || 0));&#10;      pieces.push('Forks: ' + (repo.forks_count || 0));&#10;      if (repo.updated_at) {&#10;        const d = new Date(repo.updated_at);&#10;        pieces.push('Updated: ' + d.toLocaleDateString());&#10;      }&#10;&#10;      meta.textContent = pieces.join(' • ');&#10;&#10;      card.appendChild(link);&#10;      card.appendChild(desc);&#10;      card.appendChild(meta);&#10;&#10;      fragment.appendChild(card);&#10;    });&#10;&#10;    container.appendChild(fragment);&#10;    // Initialize ripple behavior for newly added repo buttons&#10;    initButtonRipples();&#10;  } catch (err) {&#10;    console.error(err);&#10;    statusEl.textContent = 'Failed to load repositories. Please try again later.';&#10;  }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="'use strict';&#10;&#10;document.addEventListener('DOMContentLoaded', () =&gt; {&#10;  // Set current year if footer element exists&#10;  const yearEl = document.getElementById('year');&#10;  if (yearEl) {&#10;    yearEl.textContent = new Date().getFullYear();&#10;  }&#10;&#10;  // Initialize carousels&#10;  initCarousels();&#10;&#10;  // Initialize button ripple/splash tracking&#10;  initButtonRipples();&#10;&#10;  // Wire up search&#10;  initRepoSearch();&#10;&#10;  // Initial load&#10;  fetchRepos();&#10;});&#10;&#10;// Carousel functionality&#10;function initCarousels() {&#10;  function initCarousel(root) {&#10;    const track = root.querySelector('.carousel-track');&#10;    const slides = Array.from(root.querySelectorAll('.slide'));&#10;    const prevBtn = root.querySelector('.carousel-btn.prev');&#10;    const nextBtn = root.querySelector('.carousel-btn.next');&#10;    if (!track || slides.length === 0) return;&#10;    let index = 0;&#10;    function update() {&#10;      track.style.transform = 'translateX(' + (-index * 100) + '%)';&#10;    }&#10;    function prev() { index = (index - 1 + slides.length) % slides.length; update(); }&#10;    function next() { index = (index + 1) % slides.length; update(); }&#10;    if (prevBtn) prevBtn.addEventListener('click', prev);&#10;    if (nextBtn) nextBtn.addEventListener('click', next);&#10;    // Keyboard support when carousel receives focus&#10;    root.setAttribute('tabindex', '0');&#10;    root.addEventListener('keydown', (e) =&gt; {&#10;      if (e.key === 'ArrowLeft') { prev(); }&#10;      if (e.key === 'ArrowRight') { next(); }&#10;    });&#10;    update();&#10;  }&#10;  document.querySelectorAll('[data-carousel]').forEach(initCarousel);&#10;}&#10;&#10;// Button ripple hover effect: track mouse position within each .btn and set CSS vars&#10;function initButtonRipples() {&#10;  const buttons = Array.from(document.querySelectorAll('.btn'));&#10;  buttons.forEach((btn) =&gt; {&#10;    if (btn.dataset.rippleInit === '1') return;&#10;    btn.dataset.rippleInit = '1';&#10;    &#10;    // Create ripple element for liquid glass effect&#10;    if (!btn.querySelector('.ripple')) {&#10;      const ripple = document.createElement('span');&#10;      ripple.className = 'ripple';&#10;      btn.appendChild(ripple);&#10;    }&#10;    &#10;    // Wrap inner HTML to keep content above the ripple&#10;    if (!btn.querySelector('.btn-content')) {&#10;      const span = document.createElement('span');&#10;      span.className = 'btn-content';&#10;      while (btn.firstChild &amp;&amp; btn.firstChild !== btn.querySelector('.ripple')) {&#10;        span.appendChild(btn.firstChild);&#10;      }&#10;      btn.appendChild(span);&#10;    }&#10;    &#10;    btn.addEventListener('mousemove', (e) =&gt; {&#10;      const rect = btn.getBoundingClientRect();&#10;      // Compute a scale large enough to cover button diagonal&#10;      const maxDim = Math.max(rect.width, rect.height);&#10;      const diag = Math.sqrt(rect.width * rect.width + rect.height * rect.height);&#10;      const scale = (diag / 16) + 2; // 16 is base ripple size; add padding&#10;      btn.style.setProperty('--r-scale', String(Math.ceil(scale)));&#10;      const x = e.clientX - rect.left;&#10;      const y = e.clientY - rect.top;&#10;      btn.style.setProperty('--mouse-x', x + 'px');&#10;      btn.style.setProperty('--mouse-y', y + 'px');&#10;      // Keep ripple fully expanded while hovered&#10;      btn.classList.add('rippling');&#10;    });&#10;    // On keyboard focus, center the splash&#10;    btn.addEventListener('focus', () =&gt; {&#10;      btn.style.setProperty('--mouse-x', '50%');&#10;      btn.style.setProperty('--mouse-y', '50%');&#10;    });&#10;    // Clean up vars when leaving&#10;    btn.addEventListener('mouseleave', () =&gt; {&#10;      // Let ripple remain at last position and fade out smoothly even off-button&#10;      btn.classList.remove('rippling');&#10;      btn.classList.add('rippling-out');&#10;      if (btn._rippleCleanupTimer) {&#10;        clearTimeout(btn._rippleCleanupTimer);&#10;      }&#10;      btn._rippleCleanupTimer = window.setTimeout(() =&gt; {&#10;        btn.classList.remove('rippling-out');&#10;        btn.style.removeProperty('--mouse-x');&#10;        btn.style.removeProperty('--mouse-y');&#10;        btn.style.removeProperty('--r-scale');&#10;        btn._rippleCleanupTimer = null;&#10;      }, 500);&#10;    });&#10;  });&#10;}&#10;&#10;// Image Modal Functions&#10;function openImageModal(src, alt) {&#10;  const modal = document.getElementById('imageModal');&#10;  const modalImg = document.getElementById('modalImage');&#10;  const caption = document.getElementById('modalCaption');&#10;&#10;  modal.style.display = 'block';&#10;  modalImg.src = src;&#10;  modalImg.alt = alt;&#10;  caption.textContent = alt;&#10;&#10;  // Prevent body scrolling when modal is open&#10;  document.body.style.overflow = 'hidden';&#10;}&#10;&#10;function closeImageModal() {&#10;  const modal = document.getElementById('imageModal');&#10;  modal.style.display = 'none';&#10;&#10;  // Restore body scrolling&#10;  document.body.style.overflow = 'auto';&#10;}&#10;&#10;// Close modal on Escape key&#10;document.addEventListener('keydown', function(e) {&#10;  if (e.key === 'Escape') {&#10;    closeImageModal();&#10;  }&#10;});&#10;&#10;// Make functions globally available for onclick handlers&#10;window.openImageModal = openImageModal;&#10;window.closeImageModal = closeImageModal;&#10;&#10;async function fetchRepos() {&#10;  const statusEl = document.getElementById('status');&#10;  const container = document.getElementById('repo-container');&#10;  if (!statusEl || !container) return;&#10;&#10;  try {&#10;    statusEl.textContent = 'Loading repositories…';&#10;    const response = await fetch('/api/github/repos');&#10;    if (!response.ok) throw new Error('Request failed: ' + response.status);&#10;    const json = await response.json();&#10;    if (!json.ok || !Array.isArray(json.repos)) throw new Error(json.message || 'Invalid response');&#10;&#10;    statusEl.textContent = '';&#10;    renderRepos(json.repos, container);&#10;  } catch (err) {&#10;    console.error(err);&#10;    statusEl.textContent = 'Failed to load repositories. Please try again later.';&#10;  }&#10;}&#10;&#10;async function fetchSearch(q) {&#10;  const statusEl = document.getElementById('status');&#10;  const container = document.getElementById('repo-container');&#10;  if (!statusEl || !container) return;&#10;&#10;  try {&#10;    if (!q) { fetchRepos(); return; }&#10;    statusEl.textContent = 'Searching…';&#10;    const response = await fetch('/api/search?q=' + encodeURIComponent(q));&#10;    if (!response.ok) throw new Error('Search failed: ' + response.status);&#10;    const json = await response.json();&#10;    if (!json.ok || !Array.isArray(json.results)) throw new Error(json.message || 'Invalid response');&#10;&#10;    statusEl.textContent = json.count === 0 ? 'No results.' : '';&#10;    renderRepos(json.results, container);&#10;  } catch (err) {&#10;    console.error(err);&#10;    statusEl.textContent = 'Search failed. Please try again later.';&#10;  }&#10;}&#10;&#10;function renderRepos(repos, container) {&#10;  container.innerHTML = '';&#10;  const fragment = document.createDocumentFragment();&#10;&#10;  repos.forEach(repo =&gt; {&#10;    const name = repo.name;&#10;    const url = repo.html_url;&#10;    const description = repo.description || 'No description provided.';&#10;    const language = repo.language || '';&#10;    const stars = repo.stargazers_count ?? repo.stars ?? 0;&#10;    const forks = repo.forks_count ?? repo.forks ?? 0;&#10;    const updatedAt = repo.updated_at || repo.pushed_at || '';&#10;&#10;    const card = document.createElement('article');&#10;    card.className = 'repo-card';&#10;&#10;    const link = document.createElement('a');&#10;    link.href = url;&#10;    link.target = '_blank';&#10;    link.rel = 'noopener';&#10;    link.className = 'btn repo-button';&#10;    link.innerHTML = `&#10;      &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;        &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;          &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;        &lt;/svg&gt;&#10;        &lt;span&gt;${name}&lt;/span&gt;&#10;      &lt;/span&gt;&#10;    `;&#10;&#10;    const desc = document.createElement('p');&#10;    desc.className = 'note';&#10;    desc.style.margin = '10px 0 12px 0';&#10;    desc.textContent = description;&#10;&#10;    const meta = document.createElement('div');&#10;    meta.style.display = 'flex';&#10;    meta.style.flexWrap = 'wrap';&#10;    meta.style.gap = '10px';&#10;    meta.style.fontSize = '14px';&#10;    meta.style.color = 'var(--text-dim)';&#10;&#10;    const pieces = [];&#10;    if (language) pieces.push('Language: ' + language);&#10;    pieces.push('Stars: ' + stars);&#10;    if (forks) pieces.push('Forks: ' + forks);&#10;    if (updatedAt) {&#10;      const d = new Date(updatedAt);&#10;      if (!isNaN(d)) pieces.push('Updated: ' + d.toLocaleDateString());&#10;    }&#10;    meta.textContent = pieces.join(' • ');&#10;&#10;    card.appendChild(link);&#10;    card.appendChild(desc);&#10;    card.appendChild(meta);&#10;    fragment.appendChild(card);&#10;  });&#10;&#10;  container.appendChild(fragment);&#10;  // Initialize ripple behavior for newly added repo buttons&#10;  initButtonRipples();&#10;}&#10;&#10;function initRepoSearch() {&#10;  const input = document.getElementById('repo-search');&#10;  if (!input) return;&#10;&#10;  const debounced = debounce((val) =&gt; {&#10;    fetchSearch(val.trim());&#10;  }, 300);&#10;&#10;  input.addEventListener('input', (e) =&gt; {&#10;    debounced(e.target.value || '');&#10;  });&#10;}&#10;&#10;function debounce(fn, wait) {&#10;  let t = null;&#10;  return function debounced(...args) {&#10;    if (t) clearTimeout(t);&#10;    t = setTimeout(() =&gt; fn.apply(this, args), wait);&#10;  }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/static/style.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/static/style.css" />
              <option name="originalContent" value=":root {&#10;  /* Base color values for easy theming */&#10;  --panel-hex: #1b103a;   /* deep neon purple panel */&#10;  --primary-hex: #6366f1; /* indigo (blue/purple) */&#10;  --accent-hex: #22d3ee;  /* cyan/blue accent */&#10;  --white-hex: #ffffff;&#10;  --black-hex: #000000;&#10;&#10;  /* Base colors built from hex values */&#10;  --bg: #0a0516;          /* dark purple background */&#10;  --panel: var(--panel-hex);&#10;  --muted: #120a26;       /* muted purple surface */&#10;  --text: #efe9ff;        /* light lavender text */&#10;  --text-dim: #b7a9f0;    /* dim lavender text */&#10;  --white: var(--white-hex);&#10;  --black: var(--black-hex);&#10;&#10;  /* Brand colors built from hex values */&#10;  --primary: var(--primary-hex);&#10;  --primary-600: #5457e0; /* darker indigo */&#10;  --accent: var(--accent-hex);&#10;&#10;  /* Panel/Background variations using hex values with opacity */&#10;  --bg-blur: color-mix(in srgb, var(--panel-hex) 60%, transparent);&#10;&#10;  /* Overlay variations using black with opacity */&#10;  --overlay-light: color-mix(in srgb, var(--black-hex) 30%, transparent);&#10;  --overlay-medium: color-mix(in srgb, var(--black-hex) 35%, transparent);&#10;  --overlay-heavy: color-mix(in srgb, var(--black-hex) 50%, transparent);&#10;  --overlay-dark: color-mix(in srgb, var(--black-hex) 70%, transparent);&#10;  --overlay-darker: color-mix(in srgb, var(--black-hex) 90%, transparent);&#10;&#10;  /* White opacity variations using hex values */&#10;  --white-02: color-mix(in srgb, var(--white-hex) 2%, transparent);&#10;  --white-03: color-mix(in srgb, var(--white-hex) 3%, transparent);&#10;  --white-04: color-mix(in srgb, var(--white-hex) 4%, transparent);&#10;  --white-06: color-mix(in srgb, var(--white-hex) 6%, transparent);&#10;  --white-08: color-mix(in srgb, var(--white-hex) 8%, transparent);&#10;  --white-14: color-mix(in srgb, var(--white-hex) 14%, transparent);&#10;&#10;  /* Shadow variations using hex values */&#10;  --shadow-base: color-mix(in srgb, var(--black-hex) 35%, transparent);&#10;  --shadow-primary: color-mix(in srgb, var(--primary-hex) 35%, transparent);&#10;  --shadow-heavy: color-mix(in srgb, var(--black-hex) 50%, transparent);&#10;&#10;  /* Gradient variations using hex values */&#10;  --gradient-accent: color-mix(in srgb, var(--accent-hex) 15%, transparent);&#10;  --gradient-primary: color-mix(in srgb, var(--primary-hex) 12%, transparent);&#10;&#10;  /* Other properties */&#10;  --radius: 14px;&#10;  --shadow: 0 10px 30px var(--shadow-base);&#10;}&#10;&#10;* { box-sizing: border-box; }&#10;&#10;html, body {&#10;  padding: 0;&#10;  margin: 0;&#10;  scroll-behavior: smooth;&#10;  background: radial-gradient(1200px 600px at 20% -10%, rgba(34, 211, 238, 0.15), transparent 60%),&#10;              radial-gradient(1200px 600px at 80% 110%, rgba(99, 102, 241, 0.12), transparent 60%),&#10;              #0a0516;&#10;  color: var(--text);&#10;  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;;&#10;  line-height: 1.6;&#10;}&#10;&#10;/* Ensure consistent background across all pages */&#10;html {&#10;  background: radial-gradient(1200px 600px at 20% -10%, rgba(34, 211, 238, 0.15), transparent 60%),&#10;              radial-gradient(1200px 600px at 80% 110%, rgba(99, 102, 241, 0.12), transparent 60%),&#10;              #0a0516;&#10;  min-height: 100vh;&#10;}&#10;&#10;.container {&#10;  width: 100%;&#10;  max-width: 1040px;&#10;  margin: 0 auto;&#10;  padding: 0 20px;&#10;}&#10;&#10;.site-header {&#10;  position: sticky;&#10;  top: 20px;&#10;  backdrop-filter: saturate(180%) blur(32px) brightness(1.15) contrast(1.1);&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  border-radius: 30px;&#10;  margin: 0 20px;&#10;  padding: 20px 0;&#10;  box-shadow: &#10;    0 8px 32px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 40px rgba(34, 211, 238, 0.15);&#10;  z-index: 10;&#10;  overflow: hidden;&#10;}&#10;&#10;.site-header::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion - much more natural */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 30px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.site-header::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion - barely visible */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 30px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.site-header .container {&#10;  display: flex;&#10;  justify-content: space-between;&#10;  align-items: center;&#10;}&#10;&#10;/* Removed the horizontal line that was creating weird effects */&#10;&#10;.brand {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: 14px;&#10;  padding: 6px 0;&#10;}&#10;&#10;.logo {&#10;  width: 40px;&#10;  height: 40px;&#10;  display: block;&#10;}&#10;&#10;.logo-link {&#10;  position: relative;&#10;  display: block;&#10;}&#10;&#10;.logo-link::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: -16px;&#10;  left: -16px;&#10;  right: -16px;&#10;  bottom: -16px;&#10;  background: &#10;    radial-gradient(circle, &#10;      rgba(34, 211, 238, 0.8) 0%, &#10;      rgba(34, 211, 238, 0.4) 30%, &#10;      rgba(99, 102, 241, 0.2) 60%, &#10;      transparent 80%&#10;    );&#10;  border-radius: 50%;&#10;  opacity: 0.9;&#10;  z-index: -1;&#10;  filter: blur(16px);&#10;  animation: liquid-glow 4s ease-in-out infinite alternate;&#10;}&#10;&#10;.logo-link::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: -8px;&#10;  left: -8px;&#10;  right: -8px;&#10;  bottom: -8px;&#10;  background: &#10;    radial-gradient(circle, &#10;      rgba(255, 255, 255, 0.3) 0%, &#10;      transparent 70%&#10;    );&#10;  border-radius: 50%;&#10;  opacity: 0.6;&#10;  z-index: -1;&#10;  filter: blur(8px);&#10;  animation: liquid-glow 4s ease-in-out infinite alternate-reverse;&#10;}&#10;&#10;@keyframes liquid-glow {&#10;  0% {&#10;    opacity: 0.7;&#10;    transform: scale(1) rotate(0deg);&#10;    filter: blur(16px) brightness(1);&#10;  }&#10;  50% {&#10;    opacity: 0.9;&#10;    transform: scale(1.02) rotate(1deg);&#10;    filter: blur(18px) brightness(1.1);&#10;  }&#10;  100% {&#10;    opacity: 0.8;&#10;    transform: scale(1.05) rotate(-1deg);&#10;    filter: blur(20px) brightness(0.95);&#10;  }&#10;}&#10;&#10;@keyframes liquid-flow {&#10;  0% {&#10;    opacity: 0.3;&#10;    transform: translateY(-50%) scaleX(1);&#10;    filter: blur(1px) brightness(1);&#10;  }&#10;  25% {&#10;    opacity: 0.6;&#10;    transform: translateY(-50%) scaleX(1.1);&#10;    filter: blur(1.5px) brightness(1.2);&#10;  }&#10;  50% {&#10;    opacity: 0.8;&#10;    transform: translateY(-50%) scaleX(0.9);&#10;    filter: blur(0.8px) brightness(0.9);&#10;  }&#10;  75% {&#10;    opacity: 0.5;&#10;    transform: translateY(-50%) scaleX(1.05);&#10;    filter: blur(1.2px) brightness(1.1);&#10;  }&#10;  100% {&#10;    opacity: 0.3;&#10;    transform: translateY(-50%) scaleX(1);&#10;    filter: blur(1px) brightness(1);&#10;  }&#10;}&#10;&#10;.brand-text .site-title {&#10;  margin: 0;&#10;  font-size: 18px;&#10;  letter-spacing: .3px;&#10;}&#10;&#10;.brand-text .site-subtitle {&#10;  margin: 2px 0 0 0;&#10;  color: var(--text-dim);&#10;  font-size: 13px;&#10;}&#10;&#10;.actions {&#10;  margin-left: auto;&#10;  display: flex;&#10;  align-items: center;&#10;  gap: 10px;&#10;  flex-shrink: 0;&#10;}&#10;&#10;.btn {&#10;  position: relative;&#10;  display: inline-block;&#10;  padding: 10px 14px;&#10;  border-radius: 10px;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  text-decoration: none;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(25px) brightness(1.15) contrast(1.1);&#10;  box-shadow: &#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2);&#10;  transition: all 0.3s ease, transform .06s ease, border-color .2s ease, background .2s ease, color .2s ease, box-shadow .2s ease, filter .2s ease;&#10;  will-change: transform;&#10;  overflow: hidden;&#10;  z-index: 0; /* create stacking context for ripple below content */&#10;}&#10;&#10;.btn::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 10px;&#10;  pointer-events: none;&#10;  z-index: -2;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.btn::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 10px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.btn:hover {&#10;  transform: translateY(-1px);&#10;  box-shadow:&#10;    0 8px 28px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;/* Mouse-follow ripple positioning and animation */&#10;.btn .ripple {&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  width: 16px;&#10;  height: 16px;&#10;  pointer-events: none;&#10;  border-radius: 999px;&#10;  /* start hidden off-button */&#10;  transform: translate(calc(var(--mouse-x, -100px) - 8px), calc(var(--mouse-y, -100px) - 8px)) scale(0);&#10;  transition: transform .22s ease, opacity .45s ease;&#10;  filter: blur(10px);&#10;  opacity: 0;&#10;  mix-blend-mode: screen;&#10;}&#10;&#10;.btn.rippling .ripple {&#10;  /* expand and show at the mouse position */&#10;  transform: translate(calc(var(--mouse-x, -100px) - 8px), calc(var(--mouse-y, -100px) - 8px)) scale(var(--r-scale, 10));&#10;  opacity: .6; /* was .35; stronger glow */&#10;}&#10;&#10;.btn.rippling-out .ripple {&#10;  /* fade away after mouse leaves */&#10;  opacity: 0;&#10;}&#10;&#10;/* Faint blue ripple that tracks mouse; no purple */&#10;.btn .ripple,&#10;.btn.primary .ripple {&#10;  background: radial-gradient(&#10;    circle at center,&#10;    color-mix(in srgb, var(--accent) 85%, transparent) 0%,&#10;    color-mix(in srgb, var(--accent) 50%, transparent) 55%,&#10;    transparent 100%&#10;  );&#10;  opacity: .6; /* was .35; stronger base intensity */&#10;}&#10;&#10;/* Remove purple fill on primary hover */&#10;.btn.primary:hover {&#10;  background:&#10;    linear-gradient(135deg,&#10;      rgba(27, 16, 58, 0.5) 0%,&#10;      rgba(34, 211, 238, 0.2) 50%,&#10;      rgba(27, 16, 58, 0.4) 100%&#10;    );&#10;  border-color: rgba(255, 255, 255, 0.12);&#10;  color: var(--text);&#10;  filter: none;&#10;}&#10;&#10;/* Repo button: remove static glow and purple hover */&#10;.repo-button {&#10;  box-shadow:&#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2);&#10;}&#10;.repo-button:hover {&#10;  background:&#10;    linear-gradient(135deg,&#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border-color: rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  transform: translateY(-1px);&#10;  box-shadow:&#10;    0 8px 28px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;.hero {&#10;  padding: 64px 0;&#10;}&#10;&#10;.hero-title {&#10;  font-size: 28px;&#10;  margin: 0 0 10px 0;&#10;}&#10;&#10;.hero-text {&#10;  color: var(--white);&#10;  max-width: 800px;&#10;  margin: 0 0 20px 0;&#10;}&#10;&#10;.hero-ctas {&#10;  display: flex;&#10;  gap: 10px;&#10;  flex-wrap: wrap;&#10;}&#10;&#10;.section {&#10;  padding: 48px 0;&#10;}&#10;&#10;.section.muted {&#10;  background: linear-gradient(0deg, var(--white-02), var(--white-02)), var(--muted);&#10;  border-top: 1px solid var(--white-06);&#10;  border-bottom: 1px solid var(--white-06);&#10;}&#10;&#10;.grid.two {&#10;  display: grid;&#10;  grid-template-columns: 1fr;&#10;  gap: 24px;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .grid.two {&#10;    grid-template-columns: 1fr 1fr;&#10;  }&#10;}&#10;&#10;.feature-list {&#10;  margin: 0;&#10;  padding-left: 18px;&#10;}&#10;&#10;.note {&#10;  color: var(--white);&#10;  font-size: 14px;&#10;}&#10;&#10;.site-footer {&#10;  padding: 32px 0;&#10;  color: var(--text-dim);&#10;  text-align: center;&#10;  font-size: 14px;&#10;  border-top: 1px solid var(--white-06);&#10;  background: var(--bg-blur);&#10;}&#10;&#10;/* Larger, prominent repo button with theme hover */&#10;.repo-button {&#10;  position: relative;&#10;  display: inline-flex;&#10;  align-items: center;&#10;  gap: 8px;&#10;  padding: 12px 16px;&#10;  font-weight: 600;&#10;  border-radius: 12px;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  text-decoration: none;&#10;  backdrop-filter: saturate(180%) blur(25px) brightness(1.15) contrast(1.1);&#10;  box-shadow: &#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2);&#10;  transition: all 0.3s ease, transform .06s ease, background .2s ease, color .2s ease, box-shadow .2s ease, border-color .2s ease;&#10;  overflow: hidden;&#10;}&#10;&#10;.repo-button::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 12px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.repo-button::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 12px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.repo-button:hover {&#10;  background:&#10;    linear-gradient(135deg,&#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border-color: rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  transform: translateY(-1px);&#10;  box-shadow:&#10;    0 8px 28px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;/** Spotlight carousels **/&#10;.spotlight-grid {&#10;  display: grid;&#10;  grid-template-columns: 1fr;&#10;  gap: 20px;&#10;  margin: 16px 0 24px 0;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-grid {&#10;    grid-template-columns: 1fr 1fr 1fr;&#10;  }&#10;}&#10;&#10;.project-card {&#10;  position: relative;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  border-radius: 20px;&#10;  padding: 16px;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(32px) brightness(1.15) contrast(1.1);&#10;  box-shadow: &#10;    0 8px 32px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 40px rgba(34, 211, 238, 0.15);&#10;  overflow: hidden;&#10;  transition: all 0.3s ease;&#10;}&#10;&#10;.project-card::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion - much more natural */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.project-card::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion - barely visible */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.project-card:hover {&#10;  transform: translateY(-2px);&#10;  box-shadow: &#10;    0 12px 40px rgba(0, 0, 0, 0.5),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;    0 0 50px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure project card content is above the pseudo-elements */&#10;.project-card &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;.carousel {&#10;  position: relative;&#10;  margin-top: 10px;&#10;}&#10;&#10;.carousel-viewport {&#10;  position: relative;&#10;  overflow: hidden;&#10;  border-radius: 20px;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.25) 0%,&#10;      rgba(34, 211, 238, 0.08) 50%,&#10;      rgba(27, 16, 58, 0.2) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(20px) brightness(1.05) contrast(1.02);&#10;  box-shadow: &#10;    0 4px 16px rgba(0, 0, 0, 0.25),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.06);&#10;  aspect-ratio: 1.9/1; /* Made slightly taller - was 2.5:1 */&#10;  width: 100%;&#10;  transition: all 0.3s ease;&#10;}&#10;&#10;.carousel-viewport::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.04) 30%,&#10;      rgba(27, 16, 58, 0.06) 50%,&#10;      rgba(27, 16, 58, 0.04) 70%,&#10;      transparent 100%&#10;    );&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(1px);&#10;  opacity: 0.2;&#10;}&#10;&#10;.carousel-viewport:hover {&#10;  border-color: rgba(255, 255, 255, 0.12);&#10;  box-shadow: &#10;    0 6px 20px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.04),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.08);&#10;}&#10;&#10;.carousel-track {&#10;  display: flex;&#10;  width: 100%;&#10;  height: 100%;&#10;  transition: transform .35s ease;&#10;}&#10;&#10;.slide {&#10;  min-width: 100%;&#10;  height: 100%; /* Changed from aspect-ratio to full height */&#10;  display: grid;&#10;  place-items: center;&#10;  overflow: hidden;&#10;}&#10;&#10;.slide img {&#10;  width: 100%;&#10;  height: 100%;&#10;  object-fit: cover;&#10;  cursor: pointer;&#10;  position: relative;&#10;  z-index: 1; /* Ensure images are above other elements for click detection */&#10;}&#10;&#10;/* Placeholder slide visuals for when images haven't loaded */&#10;.slide.placeholder {&#10;  background: repeating-linear-gradient(135deg, var(--white-06), var(--white-06) 10px, var(--white-03) 10px, var(--white-03) 20px);&#10;  color: var(--text-dim);&#10;  font-weight: 600;&#10;}&#10;.slide.placeholder span {&#10;  background: var(--overlay-light);&#10;  padding: 6px 10px;&#10;  border-radius: 8px;&#10;}&#10;&#10;.carousel-btn {&#10;  position: relative;&#10;  top: 50%;&#10;  transform: translateY(-50%);&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.6) 0%,&#10;      rgba(34, 211, 238, 0.2) 50%,&#10;      rgba(27, 16, 58, 0.5) 100%&#10;    );&#10;  color: var(--white);&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  width: 36px;&#10;  height: 36px;&#10;  border-radius: 50%;&#10;  display: grid;&#10;  place-items: center;&#10;  cursor: pointer;&#10;  backdrop-filter: saturate(180%) blur(20px) brightness(1.1) contrast(1.05);&#10;  box-shadow: &#10;    0 4px 16px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.1),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 20px rgba(34, 211, 238, 0.15);&#10;  transition: all 0.3s ease, background .2s ease, transform .06s ease;&#10;  overflow: hidden;&#10;}&#10;&#10;.carousel-btn::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.2) 20%,&#10;      rgba(27, 16, 58, 0.3) 40%,&#10;      rgba(27, 16, 58, 0.2) 60%,&#10;      rgba(27, 16, 58, 0.3) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.15) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.1) 0%, transparent 50%);&#10;  border-radius: 50%;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.carousel-btn::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.1) 30%,&#10;      rgba(27, 16, 58, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.1) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 50%;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.3;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.carousel-btn:hover {&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.7) 0%,&#10;      rgba(34, 211, 238, 0.3) 50%,&#10;      rgba(27, 16, 58, 0.6) 100%&#10;    );&#10;  transform: translateY(-50%) scale(1.05);&#10;  box-shadow: &#10;    0 6px 20px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;    0 0 30px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure carousel button content is above the pseudo-elements */&#10;.carousel-btn &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;.carousel-btn.prev { left: 8px; }&#10;.carousel-btn.next { right: 8px; }&#10;&#10;/* Larger, dedicated carousel sections */&#10;.carousel-section {&#10;  position: relative;&#10;  padding: 48px 0;&#10;  overflow: hidden;&#10;}&#10;&#10;.carousel-section::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 20%,&#10;      rgba(27, 16, 58, 0.12) 40%,&#10;      rgba(27, 16, 58, 0.08) 60%,&#10;      rgba(27, 16, 58, 0.12) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.06) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.05) 0%, transparent 50%);&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.8px);&#10;  opacity: 0.6;&#10;}&#10;&#10;.carousel-section .container {&#10;  max-width: 1280px;&#10;}&#10;&#10;/* Make carousels larger when marked as .large */&#10;.carousel.large .slide {&#10;  height: 100%; /* Remove aspect-ratio, use full height instead */&#10;}&#10;@media (max-width: 640px) {&#10;  .carousel.large .slide {&#10;    height: 100%; /* Remove aspect-ratio, use full height instead */&#10;  }&#10;}&#10;.carousel.large .carousel-btn {&#10;  width: 44px;&#10;  height: 44px;&#10;}&#10;&#10;/* Spotlight split layout and typography */&#10;.spotlight-split {&#10;  position: relative;&#10;  display: grid;&#10;  grid-template-columns: 1fr;&#10;  gap: 24px;&#10;  align-items: start; /* Changed back to start for fixed sizing */&#10;  padding: 24px;&#10;  border-radius: 20px;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.3) 0%,&#10;      rgba(34, 211, 238, 0.1) 50%,&#10;      rgba(27, 16, 58, 0.25) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(25px) brightness(1.15) contrast(1.05);&#10;  border: 1px solid rgba(255, 255, 255, 0.06);&#10;  box-shadow: &#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.08),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.15),&#10;    0 0 30px rgba(34, 211, 238, 0.1);&#10;  overflow: hidden;&#10;  transition: all 0.3s ease;&#10;}&#10;&#10;.spotlight-split::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.06) 30%,&#10;      rgba(27, 16, 58, 0.08) 50%,&#10;      rgba(27, 16, 58, 0.06) 70%,&#10;      transparent 100%&#10;    );&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(1px);&#10;  opacity: 0.3;&#10;}&#10;&#10;.spotlight-split:hover {&#10;  transform: translateY(-1px);&#10;  box-shadow: &#10;    0 8px 32px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.04),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.1),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 40px rgba(34, 211, 238, 0.15);&#10;}&#10;&#10;/* Ensure spotlight-split content is above the pseudo-elements */&#10;.spotlight-split &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-split {&#10;    grid-template-columns: 1fr 1fr;&#10;  }&#10;  .spotlight-split.reverse .spotlight-text {&#10;    order: 2;&#10;  }&#10;  .spotlight-split.reverse .spotlight-media {&#10;    order: 1;&#10;  }&#10;}&#10;&#10;.spotlight-title {&#10;  margin: 0 0 10px 0;&#10;  font-size: 30px;&#10;  line-height: 1.2;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-title {&#10;    font-size: 34px;&#10;  }&#10;}&#10;&#10;.spotlight-desc {&#10;  color: var(--text); /* keep spotlight descriptions non-white for hierarchy */&#10;  font-size: 18px;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-desc {&#10;    font-size: 20px;&#10;  }&#10;}&#10;&#10;/* Carousel title link styles */&#10;.spotlight-title a {&#10;  color: var(--white);&#10;  text-decoration: none;&#10;}&#10;&#10;/* Spotlight text link styles */&#10;.spotlight-text-link {&#10;  color: inherit;&#10;  text-decoration: none;&#10;  display: block;&#10;  transition: transform 0.2s ease, opacity 0.2s ease;&#10;}&#10;&#10;.spotlight-text-link:hover {&#10;  transform: translateY(-2px);&#10;  opacity: 0.9;&#10;}&#10;&#10;.spotlight-text-link:hover .spotlight-title {&#10;  color: var(--accent);&#10;}&#10;&#10;/* Image Modal Styles */&#10;.modal {&#10;  display: none;&#10;  position: fixed;&#10;  z-index: 1000;&#10;  left: 0;&#10;  top: 0;&#10;  width: 100%;&#10;  height: 100%;&#10;  background-color: var(--overlay-darker);&#10;  backdrop-filter: blur(5px);&#10;}&#10;&#10;.modal-content {&#10;  position: relative;&#10;  margin: auto;&#10;  padding: 20px;&#10;  max-width: 90%;&#10;  max-height: 90%;&#10;  display: flex;&#10;  flex-direction: column;&#10;  align-items: center;&#10;  justify-content: center;&#10;  height: 100vh;&#10;}&#10;&#10;.modal-close {&#10;  position: absolute;&#10;  top: 20px;&#10;  right: 30px;&#10;  color: var(--white);&#10;  font-size: 40px;&#10;  font-weight: bold;&#10;  cursor: pointer;&#10;  z-index: 1001;&#10;  transition: opacity 0.2s ease;&#10;}&#10;&#10;.modal-close:hover {&#10;  opacity: 0.7;&#10;}&#10;&#10;#modalImage {&#10;  max-width: 100%;&#10;  max-height: 80vh;&#10;  object-fit: contain;&#10;  border-radius: 8px;&#10;  box-shadow: 0 20px 40px var(--shadow-heavy);&#10;}&#10;&#10;.modal-caption {&#10;  margin-top: 15px;&#10;  text-align: center;&#10;}&#10;&#10;.modal-caption p {&#10;  color: var(--text);&#10;  font-size: 16px;&#10;  margin: 0;&#10;  background: var(--overlay-dark);&#10;  padding: 10px 20px;&#10;  border-radius: 20px;&#10;  backdrop-filter: blur(10px);&#10;}&#10;&#10;/* Base styles */&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif;&#10;    line-height: 1.6;&#10;    color: var(--text);&#10;    background: radial-gradient(1200px 600px at 20% -10%, var(--gradient-accent), transparent 60%),&#10;                radial-gradient(1200px 600px at 80% 110%, var(--gradient-primary), transparent 60%),&#10;                var(--bg);&#10;    min-height: 100vh;&#10;}&#10;&#10;.container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 0 20px;&#10;}&#10;&#10;/* Header styles - consolidated with main site-header rule above */&#10;&#10;/* Brand and button styles consolidated with main rules above */&#10;&#10;/* Main content */&#10;main {&#10;    padding: 40px 0;&#10;}&#10;&#10;.section {&#10;    margin-bottom: 40px;&#10;}&#10;&#10;h2 {&#10;    font-size: 28px;&#10;    font-weight: 600;&#10;    margin-bottom: 16px;&#10;    color: var(--white);&#10;}&#10;&#10;.note {&#10;    color: var(--text-dim);&#10;    margin-bottom: 24px;&#10;}&#10;&#10;/* Contact grid */&#10;.contact-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 24px;&#10;    margin-top: 24px;&#10;}&#10;&#10;.contact-box {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 16px;&#10;    padding: 24px;&#10;    background: color-mix(in srgb, var(--bg-blur) 60%, rgba(255, 255, 255, 0.15));&#10;    border: 1px solid rgba(255, 255, 255, 0.2);&#10;    border-radius: 25px;&#10;    backdrop-filter: saturate(200%) blur(25px) brightness(1.2);&#10;    box-shadow: &#10;      0 8px 32px rgba(0, 0, 0, 0.4),&#10;      0 0 0 1px rgba(255, 255, 255, 0.1),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.2),&#10;      inset 0 -1px 0 rgba(0, 0, 0, 0.1);&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.contact-box:hover {&#10;    background: var(--white-08);&#10;    border-color: var(--white-14);&#10;    transform: translateY(-2px);&#10;}&#10;&#10;.contact-icon {&#10;    flex-shrink: 0;&#10;    width: 64px;&#10;    height: 64px;&#10;    background: color-mix(in srgb, var(--bg-blur) 70%, rgba(255, 255, 255, 0.2));&#10;    border-radius: 18px;&#10;    border: 1px solid rgba(255, 255, 255, 0.15);&#10;    backdrop-filter: saturate(200%) blur(20px) brightness(1.15);&#10;    box-shadow: &#10;      0 4px 16px rgba(0, 0, 0, 0.3),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.2);&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.contact-box:hover .contact-icon {&#10;    background: var(--white-08);&#10;    transform: scale(1.05);&#10;}&#10;&#10;.contact-info {&#10;    flex: 1;&#10;}&#10;&#10;.contact-info h3 {&#10;    font-size: 18px;&#10;    font-weight: 600;&#10;    margin-bottom: 4px;&#10;    color: var(--white);&#10;}&#10;&#10;.contact-info p {&#10;    font-size: 14px;&#10;    color: var(--text-dim);&#10;    margin-bottom: 8px;&#10;}&#10;&#10;.contact-link {&#10;    position: relative;&#10;    display: inline-block;&#10;    padding: 6px 12px;&#10;    background: &#10;      linear-gradient(135deg, &#10;        rgba(27, 16, 58, 0.5) 0%,&#10;        rgba(34, 211, 238, 0.2) 50%,&#10;        rgba(27, 16, 58, 0.4) 100%&#10;      );&#10;    color: var(--white);&#10;    text-decoration: none;&#10;    border-radius: 6px;&#10;    font-size: 14px;&#10;    font-weight: 500;&#10;    border: 1px solid rgba(255, 255, 255, 0.08);&#10;    backdrop-filter: saturate(180%) blur(20px) brightness(1.1) contrast(1.05);&#10;    box-shadow: &#10;      0 4px 16px rgba(0, 0, 0, 0.3),&#10;      0 0 0 1px rgba(255, 255, 255, 0.03),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.1),&#10;      inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;      0 0 20px rgba(34, 211, 238, 0.15);&#10;    transition: all 0.3s ease;&#10;    overflow: hidden;&#10;}&#10;&#10;.contact-link::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.2) 20%,&#10;      rgba(27, 16, 58, 0.3) 40%,&#10;      rgba(27, 16, 58, 0.2) 60%,&#10;      rgba(27, 16, 58, 0.3) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.15) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.1) 0%, transparent 50%);&#10;  border-radius: 6px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.contact-link::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.1) 30%,&#10;      rgba(27, 16, 58, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.1) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 6px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.3;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.contact-link:hover {&#10;    background: &#10;      linear-gradient(135deg, &#10;        rgba(27, 16, 58, 0.6) 0%,&#10;        rgba(34, 211, 238, 0.3) 50%,&#10;        rgba(27, 16, 58, 0.5) 100%&#10;      );&#10;    transform: translateY(-1px);&#10;    box-shadow: &#10;      0 6px 20px rgba(0, 0, 0, 0.4),&#10;      0 0 0 1px rgba(255, 255, 255, 0.05),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;      inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;      0 0 30px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure contact-link content is above the pseudo-elements */&#10;.contact-link &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;/* Footer */&#10;.site-footer {&#10;    padding: 40px 0;&#10;    border-top: 1px solid rgba(255, 255, 255, 0.1);&#10;    text-align: center;&#10;    color: #a1a1aa;&#10;    font-size: 14px;&#10;}&#10;&#10;/* Responsive design */&#10;@media (max-width: 768px) {&#10;    .site-header .container {&#10;        flex-direction: column;&#10;        align-items: flex-start;&#10;        gap: 16px;&#10;    }&#10;    &#10;    .actions {&#10;        width: 100%;&#10;        justify-content: center;&#10;        flex-wrap: wrap;&#10;    }&#10;&#10;    .contact-grid {&#10;        grid-template-columns: 1fr;&#10;    }&#10;&#10;    .contact-box {&#10;        flex-direction: column;&#10;        text-align: center;&#10;    }&#10;&#10;    .contact-icon {&#10;        margin-bottom: 8px;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .container {&#10;        padding: 0 16px;&#10;    }&#10;&#10;    .contact-box {&#10;        padding: 20px;&#10;    }&#10;&#10;    .actions {&#10;        width: 100%;&#10;        justify-content: center;&#10;    }&#10;&#10;    .btn {&#10;        flex: 1;&#10;        text-align: center;&#10;        min-width: 0;&#10;    }&#10;}&#10;&#10;/* Contact page button sizing adjustments */&#10;.contact-buttons .btn {&#10;    align-self: flex-start;&#10;    min-width: 240px; /* less wide than full width */&#10;    padding: 14px 20px; /* thicker interior padding */&#10;}&#10;&#10;.contact-buttons .btn .btn-content {&#10;    padding: 2px 0; /* slight extra interior breathing room */&#10;}&#10;&#10;/* General glass card styling for consistent effects across the site */&#10;.glass-card {&#10;    background: color-mix(in srgb, var(--bg-blur) 70%, rgba(255, 255, 255, 0.1));&#10;    border: 1px solid rgba(255, 255, 255, 0.15);&#10;    border-radius: 20px;&#10;    backdrop-filter: saturate(180%) blur(20px) brightness(1.1);&#10;    box-shadow: &#10;        0 4px 20px rgba(0, 0, 0, 0.3),&#10;        0 0 0 1px rgba(255, 255, 255, 0.05),&#10;        inset 0 1px 0 rgba(255, 255, 255, 0.1);&#10;}&#10;&#10;/* Repository card liquid glass effect - matching the header style */&#10;.repo-card {&#10;    position: relative;&#10;    border: 1px solid rgba(255, 255, 255, 0.08);&#10;    border-radius: 12px;&#10;    padding: 16px;&#10;    background: &#10;        linear-gradient(135deg, &#10;            rgba(27, 16, 58, 0.4) 0%,&#10;            rgba(34, 211, 238, 0.15) 50%,&#10;            rgba(27, 16, 58, 0.3) 100%&#10;        );&#10;    backdrop-filter: saturate(180%) blur(32px) brightness(1.15) contrast(1.1);&#10;    box-shadow: &#10;        0 8px 32px rgba(0, 0, 0, 0.4),&#10;        0 0 0 1px rgba(255, 255, 255, 0.03),&#10;        inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;        inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;        0 0 40px rgba(34, 211, 238, 0.15);&#10;    overflow: hidden;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.repo-card::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    right: 0;&#10;    bottom: 0;&#10;    background: &#10;        /* Subtle liquid distortion - much more natural */&#10;        linear-gradient(90deg,&#10;            transparent 0%,&#10;            rgba(27, 16, 58, 0.15) 20%,&#10;            rgba(27, 16, 58, 0.25) 40%,&#10;            rgba(27, 16, 58, 0.15) 60%,&#10;            rgba(27, 16, 58, 0.25) 80%,&#10;            transparent 100%&#10;        ),&#10;        /* Subtle light positioning */&#10;        radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;        radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;    border-radius: 12px;&#10;    pointer-events: none;&#10;    z-index: -1;&#10;    filter: blur(0.5px);&#10;}&#10;&#10;.repo-card::after {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    right: 0;&#10;    bottom: 0;&#10;    background: &#10;        /* Very subtle liquid distortion - barely visible */&#10;        linear-gradient(90deg,&#10;            transparent 0%,&#10;            rgba(27, 16, 58, 0.08) 30%,&#10;            rgba(27, 16, 58, 0.12) 50%,&#10;            rgba(27, 16, 58, 0.08) 70%,&#10;            transparent 100%&#10;        ),&#10;        /* Noise texture for the fuzzy, hairy edge effect */&#10;        url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;    border-radius: 12px;&#10;    pointer-events: none;&#10;    z-index: -1;&#10;    opacity: 0.4;&#10;    filter: blur(0.8px);&#10;}&#10;&#10;.repo-card:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: &#10;        0 12px 40px rgba(0, 0, 0, 0.5),&#10;        0 0 0 1px rgba(255, 255, 255, 0.05),&#10;        inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;        inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;        0 0 50px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure repository card content is above the pseudo-elements */&#10;.repo-card &gt; * {&#10;    position: relative;&#10;    z-index: 1;&#10;}&#10;&#10;/* Glass effect for muted sections */&#10;.section.muted {&#10;    background: color-mix(in srgb, var(--muted) 80%, rgba(255, 255, 255, 0.05));&#10;    backdrop-filter: saturate(180%) blur(15px) brightness(1.05);&#10;    border: 1px solid rgba(255, 255, 255, 0.08);&#10;    border-radius: 20px;&#10;    margin: 0 20px;&#10;}&#10;" />
              <option name="updatedContent" value=":root {&#10;  /* Base color values for easy theming */&#10;  --panel-hex: #1b103a;   /* deep neon purple panel */&#10;  --primary-hex: #6366f1; /* indigo (blue/purple) */&#10;  --accent-hex: #22d3ee;  /* cyan/blue accent */&#10;  --white-hex: #ffffff;&#10;  --black-hex: #000000;&#10;&#10;  /* Base colors built from hex values */&#10;  --bg: #0a0516;          /* dark purple background */&#10;  --panel: var(--panel-hex);&#10;  --muted: #120a26;       /* muted purple surface */&#10;  --text: #efe9ff;        /* light lavender text */&#10;  --text-dim: #b7a9f0;    /* dim lavender text */&#10;  --white: var(--white-hex);&#10;  --black: var(--black-hex);&#10;&#10;  /* Brand colors built from hex values */&#10;  --primary: var(--primary-hex);&#10;  --primary-600: #5457e0; /* darker indigo */&#10;  --accent: var(--accent-hex);&#10;&#10;  /* Panel/Background variations using hex values with opacity */&#10;  --bg-blur: color-mix(in srgb, var(--panel-hex) 60%, transparent);&#10;&#10;  /* Overlay variations using black with opacity */&#10;  --overlay-light: color-mix(in srgb, var(--black-hex) 30%, transparent);&#10;  --overlay-medium: color-mix(in srgb, var(--black-hex) 35%, transparent);&#10;  --overlay-heavy: color-mix(in srgb, var(--black-hex) 50%, transparent);&#10;  --overlay-dark: color-mix(in srgb, var(--black-hex) 70%, transparent);&#10;  --overlay-darker: color-mix(in srgb, var(--black-hex) 90%, transparent);&#10;&#10;  /* White opacity variations using hex values */&#10;  --white-02: color-mix(in srgb, var(--white-hex) 2%, transparent);&#10;  --white-03: color-mix(in srgb, var(--white-hex) 3%, transparent);&#10;  --white-04: color-mix(in srgb, var(--white-hex) 4%, transparent);&#10;  --white-06: color-mix(in srgb, var(--white-hex) 6%, transparent);&#10;  --white-08: color-mix(in srgb, var(--white-hex) 8%, transparent);&#10;  --white-14: color-mix(in srgb, var(--white-hex) 14%, transparent);&#10;&#10;  /* Shadow variations using hex values */&#10;  --shadow-base: color-mix(in srgb, var(--black-hex) 35%, transparent);&#10;  --shadow-primary: color-mix(in srgb, var(--primary-hex) 35%, transparent);&#10;  --shadow-heavy: color-mix(in srgb, var(--black-hex) 50%, transparent);&#10;&#10;  /* Gradient variations using hex values */&#10;  --gradient-accent: color-mix(in srgb, var(--accent-hex) 15%, transparent);&#10;  --gradient-primary: color-mix(in srgb, var(--primary-hex) 12%, transparent);&#10;&#10;  /* Other properties */&#10;  --radius: 14px;&#10;  --shadow: 0 10px 30px var(--shadow-base);&#10;}&#10;&#10;* { box-sizing: border-box; }&#10;&#10;html, body {&#10;  padding: 0;&#10;  margin: 0;&#10;  scroll-behavior: smooth;&#10;  background: radial-gradient(1200px 600px at 20% -10%, rgba(34, 211, 238, 0.15), transparent 60%),&#10;              radial-gradient(1200px 600px at 80% 110%, rgba(99, 102, 241, 0.12), transparent 60%),&#10;              #0a0516;&#10;  color: var(--text);&#10;  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;;&#10;  line-height: 1.6;&#10;}&#10;&#10;/* Ensure consistent background across all pages */&#10;html {&#10;  background: radial-gradient(1200px 600px at 20% -10%, rgba(34, 211, 238, 0.15), transparent 60%),&#10;              radial-gradient(1200px 600px at 80% 110%, rgba(99, 102, 241, 0.12), transparent 60%),&#10;              #0a0516;&#10;  min-height: 100vh;&#10;}&#10;&#10;.container {&#10;  width: 100%;&#10;  max-width: 1040px;&#10;  margin: 0 auto;&#10;  padding: 0 20px;&#10;}&#10;&#10;.site-header {&#10;  position: sticky;&#10;  top: 20px;&#10;  backdrop-filter: saturate(180%) blur(32px) brightness(1.15) contrast(1.1);&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  border-radius: 30px;&#10;  margin: 0 20px;&#10;  padding: 20px 0;&#10;  box-shadow: &#10;    0 8px 32px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 40px rgba(34, 211, 238, 0.15);&#10;  z-index: 10;&#10;  overflow: hidden;&#10;}&#10;&#10;.site-header::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion - much more natural */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 30px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.site-header::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion - barely visible */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 30px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.site-header .container {&#10;  display: flex;&#10;  justify-content: space-between;&#10;  align-items: center;&#10;}&#10;&#10;/* Removed the horizontal line that was creating weird effects */&#10;&#10;.brand {&#10;  display: flex;&#10;  align-items: center;&#10;  gap: 14px;&#10;  padding: 6px 0;&#10;}&#10;&#10;.logo {&#10;  width: 40px;&#10;  height: 40px;&#10;  display: block;&#10;}&#10;&#10;.logo-link {&#10;  position: relative;&#10;  display: block;&#10;}&#10;&#10;.logo-link::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: -16px;&#10;  left: -16px;&#10;  right: -16px;&#10;  bottom: -16px;&#10;  background: &#10;    radial-gradient(circle, &#10;      rgba(34, 211, 238, 0.8) 0%, &#10;      rgba(34, 211, 238, 0.4) 30%, &#10;      rgba(99, 102, 241, 0.2) 60%, &#10;      transparent 80%&#10;    );&#10;  border-radius: 50%;&#10;  opacity: 0.9;&#10;  z-index: -1;&#10;  filter: blur(16px);&#10;  animation: liquid-glow 4s ease-in-out infinite alternate;&#10;}&#10;&#10;.logo-link::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: -8px;&#10;  left: -8px;&#10;  right: -8px;&#10;  bottom: -8px;&#10;  background: &#10;    radial-gradient(circle, &#10;      rgba(255, 255, 255, 0.3) 0%, &#10;      transparent 70%&#10;    );&#10;  border-radius: 50%;&#10;  opacity: 0.6;&#10;  z-index: -1;&#10;  filter: blur(8px);&#10;  animation: liquid-glow 4s ease-in-out infinite alternate-reverse;&#10;}&#10;&#10;@keyframes liquid-glow {&#10;  0% {&#10;    opacity: 0.7;&#10;    transform: scale(1) rotate(0deg);&#10;    filter: blur(16px) brightness(1);&#10;  }&#10;  50% {&#10;    opacity: 0.9;&#10;    transform: scale(1.02) rotate(1deg);&#10;    filter: blur(18px) brightness(1.1);&#10;  }&#10;  100% {&#10;    opacity: 0.8;&#10;    transform: scale(1.05) rotate(-1deg);&#10;    filter: blur(20px) brightness(0.95);&#10;  }&#10;}&#10;&#10;@keyframes liquid-flow {&#10;  0% {&#10;    opacity: 0.3;&#10;    transform: translateY(-50%) scaleX(1);&#10;    filter: blur(1px) brightness(1);&#10;  }&#10;  25% {&#10;    opacity: 0.6;&#10;    transform: translateY(-50%) scaleX(1.1);&#10;    filter: blur(1.5px) brightness(1.2);&#10;  }&#10;  50% {&#10;    opacity: 0.8;&#10;    transform: translateY(-50%) scaleX(0.9);&#10;    filter: blur(0.8px) brightness(0.9);&#10;  }&#10;  75% {&#10;    opacity: 0.5;&#10;    transform: translateY(-50%) scaleX(1.05);&#10;    filter: blur(1.2px) brightness(1.1);&#10;  }&#10;  100% {&#10;    opacity: 0.3;&#10;    transform: translateY(-50%) scaleX(1);&#10;    filter: blur(1px) brightness(1);&#10;  }&#10;}&#10;&#10;.brand-text .site-title {&#10;  margin: 0;&#10;  font-size: 18px;&#10;  letter-spacing: .3px;&#10;}&#10;&#10;.brand-text .site-subtitle {&#10;  margin: 2px 0 0 0;&#10;  color: var(--text-dim);&#10;  font-size: 13px;&#10;}&#10;&#10;.actions {&#10;  margin-left: auto;&#10;  display: flex;&#10;  align-items: center;&#10;  gap: 10px;&#10;  flex-shrink: 0;&#10;}&#10;&#10;.btn {&#10;  position: relative;&#10;  display: inline-block;&#10;  padding: 10px 14px;&#10;  border-radius: 10px;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  text-decoration: none;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(25px) brightness(1.15) contrast(1.1);&#10;  box-shadow: &#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2);&#10;  transition: all 0.3s ease, transform .06s ease, border-color .2s ease, background .2s ease, color .2s ease, box-shadow .2s ease, filter .2s ease;&#10;  will-change: transform;&#10;  overflow: hidden;&#10;  z-index: 0; /* create stacking context for ripple below content */&#10;}&#10;&#10;.btn::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 10px;&#10;  pointer-events: none;&#10;  z-index: -2;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.btn::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 10px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.btn:hover {&#10;  transform: translateY(-1px);&#10;  box-shadow:&#10;    0 8px 28px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;/* Mouse-follow ripple positioning and animation */&#10;.btn .ripple {&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  width: 16px;&#10;  height: 16px;&#10;  pointer-events: none;&#10;  border-radius: 999px;&#10;  /* start hidden off-button */&#10;  transform: translate(calc(var(--mouse-x, -100px) - 8px), calc(var(--mouse-y, -100px) - 8px)) scale(0);&#10;  transition: transform .22s ease, opacity .45s ease;&#10;  filter: blur(10px);&#10;  opacity: 0;&#10;  mix-blend-mode: screen;&#10;}&#10;&#10;.btn.rippling .ripple {&#10;  /* expand and show at the mouse position */&#10;  transform: translate(calc(var(--mouse-x, -100px) - 8px), calc(var(--mouse-y, -100px) - 8px)) scale(var(--r-scale, 10));&#10;  opacity: .6; /* was .35; stronger glow */&#10;}&#10;&#10;.btn.rippling-out .ripple {&#10;  /* fade away after mouse leaves */&#10;  opacity: 0;&#10;}&#10;&#10;/* Faint blue ripple that tracks mouse; no purple */&#10;.btn .ripple,&#10;.btn.primary .ripple {&#10;  background: radial-gradient(&#10;    circle at center,&#10;    color-mix(in srgb, var(--accent) 85%, transparent) 0%,&#10;    color-mix(in srgb, var(--accent) 50%, transparent) 55%,&#10;    transparent 100%&#10;  );&#10;  opacity: .6; /* was .35; stronger base intensity */&#10;}&#10;&#10;/* Remove purple fill on primary hover */&#10;.btn.primary:hover {&#10;  background:&#10;    linear-gradient(135deg,&#10;      rgba(27, 16, 58, 0.5) 0%,&#10;      rgba(34, 211, 238, 0.2) 50%,&#10;      rgba(27, 16, 58, 0.4) 100%&#10;    );&#10;  border-color: rgba(255, 255, 255, 0.12);&#10;  color: var(--text);&#10;  filter: none;&#10;}&#10;&#10;/* Repo button: remove static glow and purple hover */&#10;.repo-button {&#10;  box-shadow:&#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2);&#10;}&#10;.repo-button:hover {&#10;  background:&#10;    linear-gradient(135deg,&#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border-color: rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  transform: translateY(-1px);&#10;  box-shadow:&#10;    0 8px 28px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;.hero {&#10;  padding: 64px 0;&#10;}&#10;&#10;.hero-title {&#10;  font-size: 28px;&#10;  margin: 0 0 10px 0;&#10;}&#10;&#10;.hero-text {&#10;  color: var(--white);&#10;  max-width: 800px;&#10;  margin: 0 0 20px 0;&#10;}&#10;&#10;.hero-ctas {&#10;  display: flex;&#10;  gap: 10px;&#10;  flex-wrap: wrap;&#10;}&#10;&#10;.section {&#10;  padding: 48px 0;&#10;}&#10;&#10;.section.muted {&#10;  background: linear-gradient(0deg, var(--white-02), var(--white-02)), var(--muted);&#10;  border-top: 1px solid var(--white-06);&#10;  border-bottom: 1px solid var(--white-06);&#10;}&#10;&#10;.grid.two {&#10;  display: grid;&#10;  grid-template-columns: 1fr;&#10;  gap: 24px;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .grid.two {&#10;    grid-template-columns: 1fr 1fr;&#10;  }&#10;}&#10;&#10;.feature-list {&#10;  margin: 0;&#10;  padding-left: 18px;&#10;}&#10;&#10;.note {&#10;  color: var(--white);&#10;  font-size: 14px;&#10;}&#10;&#10;.site-footer {&#10;  padding: 32px 0;&#10;  color: var(--text-dim);&#10;  text-align: center;&#10;  font-size: 14px;&#10;  border-top: 1px solid var(--white-06);&#10;  background: var(--bg-blur);&#10;}&#10;&#10;/* Larger, prominent repo button with theme hover */&#10;.repo-button {&#10;  position: relative;&#10;  display: inline-flex;&#10;  align-items: center;&#10;  gap: 8px;&#10;  padding: 12px 16px;&#10;  font-weight: 600;&#10;  border-radius: 12px;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  text-decoration: none;&#10;  backdrop-filter: saturate(180%) blur(25px) brightness(1.15) contrast(1.1);&#10;  box-shadow: &#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2);&#10;  transition: all 0.3s ease, transform .06s ease, background .2s ease, color .2s ease, box-shadow .2s ease, border-color .2s ease;&#10;  overflow: hidden;&#10;}&#10;&#10;.repo-button::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 12px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.repo-button::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 12px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.repo-button:hover {&#10;  background:&#10;    linear-gradient(135deg,&#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  border-color: rgba(255, 255, 255, 0.08);&#10;  color: var(--text);&#10;  transform: translateY(-1px);&#10;  box-shadow:&#10;    0 8px 28px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25);&#10;}&#10;&#10;/** Spotlight carousels **/&#10;.spotlight-grid {&#10;  display: grid;&#10;  grid-template-columns: 1fr;&#10;  gap: 20px;&#10;  margin: 16px 0 24px 0;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-grid {&#10;    grid-template-columns: 1fr 1fr 1fr;&#10;  }&#10;}&#10;&#10;.project-card {&#10;  position: relative;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  border-radius: 20px;&#10;  padding: 16px;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.4) 0%,&#10;      rgba(34, 211, 238, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.3) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(32px) brightness(1.15) contrast(1.1);&#10;  box-shadow: &#10;    0 8px 32px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 40px rgba(34, 211, 238, 0.15);&#10;  overflow: hidden;&#10;  transition: all 0.3s ease;&#10;}&#10;&#10;.project-card::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion - much more natural */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.15) 20%,&#10;      rgba(27, 16, 58, 0.25) 40%,&#10;      rgba(27, 16, 58, 0.15) 60%,&#10;      rgba(27, 16, 58, 0.25) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.project-card::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion - barely visible */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 30%,&#10;      rgba(27, 16, 58, 0.12) 50%,&#10;      rgba(27, 16, 58, 0.08) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.4;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.project-card:hover {&#10;  transform: translateY(-2px);&#10;  box-shadow: &#10;    0 12px 40px rgba(0, 0, 0, 0.5),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;    0 0 50px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure project card content is above the pseudo-elements */&#10;.project-card &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;.carousel {&#10;  position: relative;&#10;  margin-top: 10px;&#10;}&#10;&#10;.carousel-viewport {&#10;  position: relative;&#10;  overflow: hidden;&#10;  border-radius: 20px;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.25) 0%,&#10;      rgba(34, 211, 238, 0.08) 50%,&#10;      rgba(27, 16, 58, 0.2) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(20px) brightness(1.05) contrast(1.02);&#10;  box-shadow: &#10;    0 4px 16px rgba(0, 0, 0, 0.25),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.06);&#10;  aspect-ratio: 1.9/1; /* Made slightly taller - was 2.5:1 */&#10;  width: 100%;&#10;  transition: all 0.3s ease;&#10;}&#10;&#10;.carousel-viewport::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.04) 30%,&#10;      rgba(27, 16, 58, 0.06) 50%,&#10;      rgba(27, 16, 58, 0.04) 70%,&#10;      transparent 100%&#10;    );&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(1px);&#10;  opacity: 0.2;&#10;}&#10;&#10;.carousel-viewport:hover {&#10;  border-color: rgba(255, 255, 255, 0.12);&#10;  box-shadow: &#10;    0 6px 20px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.04),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.08);&#10;}&#10;&#10;.carousel-track {&#10;  display: flex;&#10;  width: 100%;&#10;  height: 100%;&#10;  transition: transform .35s ease;&#10;}&#10;&#10;.slide {&#10;  min-width: 100%;&#10;  height: 100%; /* Changed from aspect-ratio to full height */&#10;  display: grid;&#10;  place-items: center;&#10;  overflow: hidden;&#10;}&#10;&#10;.slide img {&#10;  width: 100%;&#10;  height: 100%;&#10;  object-fit: cover;&#10;  cursor: pointer;&#10;  position: relative;&#10;  z-index: 1; /* Ensure images are above other elements for click detection */&#10;}&#10;&#10;/* Placeholder slide visuals for when images haven't loaded */&#10;.slide.placeholder {&#10;  background: repeating-linear-gradient(135deg, var(--white-06), var(--white-06) 10px, var(--white-03) 10px, var(--white-03) 20px);&#10;  color: var(--text-dim);&#10;  font-weight: 600;&#10;}&#10;.slide.placeholder span {&#10;  background: var(--overlay-light);&#10;  padding: 6px 10px;&#10;  border-radius: 8px;&#10;}&#10;&#10;.carousel-btn {&#10;  position: relative;&#10;  top: 50%;&#10;  transform: translateY(-50%);&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.6) 0%,&#10;      rgba(34, 211, 238, 0.2) 50%,&#10;      rgba(27, 16, 58, 0.5) 100%&#10;    );&#10;  color: var(--white);&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  width: 36px;&#10;  height: 36px;&#10;  border-radius: 50%;&#10;  display: grid;&#10;  place-items: center;&#10;  cursor: pointer;&#10;  backdrop-filter: saturate(180%) blur(20px) brightness(1.1) contrast(1.05);&#10;  box-shadow: &#10;    0 4px 16px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.1),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 20px rgba(34, 211, 238, 0.15);&#10;  transition: all 0.3s ease, background .2s ease, transform .06s ease;&#10;  overflow: hidden;&#10;}&#10;&#10;.carousel-btn::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.2) 20%,&#10;      rgba(27, 16, 58, 0.3) 40%,&#10;      rgba(27, 16, 58, 0.2) 60%,&#10;      rgba(27, 16, 58, 0.3) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.15) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.1) 0%, transparent 50%);&#10;  border-radius: 50%;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.carousel-btn::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.1) 30%,&#10;      rgba(27, 16, 58, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.1) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 50%;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.3;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.carousel-btn:hover {&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.7) 0%,&#10;      rgba(34, 211, 238, 0.3) 50%,&#10;      rgba(27, 16, 58, 0.6) 100%&#10;    );&#10;  transform: translateY(-50%) scale(1.05);&#10;  box-shadow: &#10;    0 6px 20px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.05),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;    0 0 30px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure carousel button content is above the pseudo-elements */&#10;.carousel-btn &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;.carousel-btn.prev { left: 8px; }&#10;.carousel-btn.next { right: 8px; }&#10;&#10;/* Larger, dedicated carousel sections */&#10;.carousel-section {&#10;  position: relative;&#10;  padding: 48px 0;&#10;  overflow: hidden;&#10;}&#10;&#10;.carousel-section::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.08) 20%,&#10;      rgba(27, 16, 58, 0.12) 40%,&#10;      rgba(27, 16, 58, 0.08) 60%,&#10;      rgba(27, 16, 58, 0.12) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.06) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.05) 0%, transparent 50%);&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.8px);&#10;  opacity: 0.6;&#10;}&#10;&#10;.carousel-section .container {&#10;  max-width: 1280px;&#10;}&#10;&#10;/* Make carousels larger when marked as .large */&#10;.carousel.large .slide {&#10;  height: 100%; /* Remove aspect-ratio, use full height instead */&#10;}&#10;@media (max-width: 640px) {&#10;  .carousel.large .slide {&#10;    height: 100%; /* Remove aspect-ratio, use full height instead */&#10;  }&#10;}&#10;.carousel.large .carousel-btn {&#10;  width: 44px;&#10;  height: 44px;&#10;}&#10;&#10;/* Spotlight split layout and typography */&#10;.spotlight-split {&#10;  position: relative;&#10;  display: grid;&#10;  grid-template-columns: 1fr;&#10;  gap: 24px;&#10;  align-items: start; /* Changed back to start for fixed sizing */&#10;  padding: 24px;&#10;  border-radius: 20px;&#10;  background: &#10;    linear-gradient(135deg, &#10;      rgba(27, 16, 58, 0.3) 0%,&#10;      rgba(34, 211, 238, 0.1) 50%,&#10;      rgba(27, 16, 58, 0.25) 100%&#10;    );&#10;  backdrop-filter: saturate(180%) blur(25px) brightness(1.15) contrast(1.05);&#10;  border: 1px solid rgba(255, 255, 255, 0.06);&#10;  box-shadow: &#10;    0 6px 24px rgba(0, 0, 0, 0.3),&#10;    0 0 0 1px rgba(255, 255, 255, 0.03),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.08),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.15),&#10;    0 0 30px rgba(34, 211, 238, 0.1);&#10;  overflow: hidden;&#10;  transition: all 0.3s ease;&#10;}&#10;&#10;.spotlight-split::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.06) 30%,&#10;      rgba(27, 16, 58, 0.08) 50%,&#10;      rgba(27, 16, 58, 0.06) 70%,&#10;      transparent 100%&#10;    );&#10;  border-radius: 20px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(1px);&#10;  opacity: 0.3;&#10;}&#10;&#10;.spotlight-split:hover {&#10;  transform: translateY(-1px);&#10;  box-shadow: &#10;    0 8px 32px rgba(0, 0, 0, 0.4),&#10;    0 0 0 1px rgba(255, 255, 255, 0.04),&#10;    inset 0 1px 0 rgba(255, 255, 255, 0.1),&#10;    inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;    0 0 40px rgba(34, 211, 238, 0.15);&#10;}&#10;&#10;/* Ensure spotlight-split content is above the pseudo-elements */&#10;.spotlight-split &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-split {&#10;    grid-template-columns: 1fr 1fr;&#10;  }&#10;  .spotlight-split.reverse .spotlight-text {&#10;    order: 2;&#10;  }&#10;  .spotlight-split.reverse .spotlight-media {&#10;    order: 1;&#10;  }&#10;}&#10;&#10;.spotlight-title {&#10;  margin: 0 0 10px 0;&#10;  font-size: 30px;&#10;  line-height: 1.2;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-title {&#10;    font-size: 34px;&#10;  }&#10;}&#10;&#10;.spotlight-desc {&#10;  color: var(--text); /* keep spotlight descriptions non-white for hierarchy */&#10;  font-size: 18px;&#10;}&#10;&#10;@media (min-width: 860px) {&#10;  .spotlight-desc {&#10;    font-size: 20px;&#10;  }&#10;}&#10;&#10;/* Carousel title link styles */&#10;.spotlight-title a {&#10;  color: var(--white);&#10;  text-decoration: none;&#10;}&#10;&#10;/* Spotlight text link styles */&#10;.spotlight-text-link {&#10;  color: inherit;&#10;  text-decoration: none;&#10;  display: block;&#10;  transition: transform 0.2s ease, opacity 0.2s ease;&#10;}&#10;&#10;.spotlight-text-link:hover {&#10;  transform: translateY(-2px);&#10;  opacity: 0.9;&#10;}&#10;&#10;.spotlight-text-link:hover .spotlight-title {&#10;  color: var(--accent);&#10;}&#10;&#10;/* Image Modal Styles */&#10;.modal {&#10;  display: none;&#10;  position: fixed;&#10;  z-index: 1000;&#10;  left: 0;&#10;  top: 0;&#10;  width: 100%;&#10;  height: 100%;&#10;  background-color: var(--overlay-darker);&#10;  backdrop-filter: blur(5px);&#10;}&#10;&#10;.modal-content {&#10;  position: relative;&#10;  margin: auto;&#10;  padding: 20px;&#10;  max-width: 90%;&#10;  max-height: 90%;&#10;  display: flex;&#10;  flex-direction: column;&#10;  align-items: center;&#10;  justify-content: center;&#10;  height: 100vh;&#10;}&#10;&#10;.modal-close {&#10;  position: absolute;&#10;  top: 20px;&#10;  right: 30px;&#10;  color: var(--white);&#10;  font-size: 40px;&#10;  font-weight: bold;&#10;  cursor: pointer;&#10;  z-index: 1001;&#10;  transition: opacity 0.2s ease;&#10;}&#10;&#10;.modal-close:hover {&#10;  opacity: 0.7;&#10;}&#10;&#10;#modalImage {&#10;  max-width: 100%;&#10;  max-height: 80vh;&#10;  object-fit: contain;&#10;  border-radius: 8px;&#10;  box-shadow: 0 20px 40px var(--shadow-heavy);&#10;}&#10;&#10;.modal-caption {&#10;  margin-top: 15px;&#10;  text-align: center;&#10;}&#10;&#10;.modal-caption p {&#10;  color: var(--text);&#10;  font-size: 16px;&#10;  margin: 0;&#10;  background: var(--overlay-dark);&#10;  padding: 10px 20px;&#10;  border-radius: 20px;&#10;  backdrop-filter: blur(10px);&#10;}&#10;&#10;/* Utility: screen-reader only */&#10;.sr-only {&#10;  position: absolute !important;&#10;  width: 1px; height: 1px;&#10;  padding: 0; margin: -1px;&#10;  overflow: hidden; clip: rect(0, 0, 0, 0);&#10;  white-space: nowrap; border: 0;&#10;}&#10;&#10;/* Form styles */&#10;.form-field { margin: 0 0 14px 0; }&#10;.form-field label { display: block; margin: 0 0 6px 0; font-size: 14px; color: var(--text-dim); }&#10;.input, .textarea {&#10;  width: 100%;&#10;  padding: 10px 12px;&#10;  border-radius: 10px;&#10;  border: 1px solid rgba(255, 255, 255, 0.08);&#10;  background: rgba(255, 255, 255, 0.03);&#10;  color: var(--text);&#10;  outline: none;&#10;  transition: border-color .2s ease, box-shadow .2s ease, background .2s ease;&#10;}&#10;.input:focus, .textarea:focus {&#10;  border-color: rgba(255, 255, 255, 0.16);&#10;  box-shadow: 0 0 0 3px rgba(34, 211, 238, 0.12);&#10;  background: rgba(255, 255, 255, 0.04);&#10;}&#10;.textarea { resize: vertical; }&#10;&#10;/* Repo search input alignment */&#10;.repo-search-wrap input[type=&quot;search&quot;] {&#10;  font-size: 15px;&#10;}&#10;&#10;/* Base styles */&#10;* {&#10;    margin: 0;&#10;    padding: 0;&#10;    box-sizing: border-box;&#10;}&#10;&#10;body {&#10;    font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, sans-serif;&#10;    line-height: 1.6;&#10;    color: var(--text);&#10;    background: radial-gradient(1200px 600px at 20% -10%, var(--gradient-accent), transparent 60%),&#10;                radial-gradient(1200px 600px at 80% 110%, var(--gradient-primary), transparent 60%),&#10;                var(--bg);&#10;    min-height: 100vh;&#10;}&#10;&#10;.container {&#10;    max-width: 1200px;&#10;    margin: 0 auto;&#10;    padding: 0 20px;&#10;}&#10;&#10;/* Header styles - consolidated with main site-header rule above */&#10;&#10;/* Brand and button styles consolidated with main rules above */&#10;&#10;/* Main content */&#10;main {&#10;    padding: 40px 0;&#10;}&#10;&#10;.section {&#10;    margin-bottom: 40px;&#10;}&#10;&#10;h2 {&#10;    font-size: 28px;&#10;    font-weight: 600;&#10;    margin-bottom: 16px;&#10;    color: var(--white);&#10;}&#10;&#10;.note {&#10;    color: var(--text-dim);&#10;    margin-bottom: 24px;&#10;}&#10;&#10;/* Contact grid */&#10;.contact-grid {&#10;    display: grid;&#10;    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));&#10;    gap: 24px;&#10;    margin-top: 24px;&#10;}&#10;&#10;.contact-box {&#10;    display: flex;&#10;    align-items: center;&#10;    gap: 16px;&#10;    padding: 24px;&#10;    background: color-mix(in srgb, var(--bg-blur) 60%, rgba(255, 255, 255, 0.15));&#10;    border: 1px solid rgba(255, 255, 255, 0.2);&#10;    border-radius: 25px;&#10;    backdrop-filter: saturate(200%) blur(25px) brightness(1.2);&#10;    box-shadow: &#10;      0 8px 32px rgba(0, 0, 0, 0.4),&#10;      0 0 0 1px rgba(255, 255, 255, 0.1),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.2),&#10;      inset 0 -1px 0 rgba(0, 0, 0, 0.1);&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.contact-box:hover {&#10;    background: var(--white-08);&#10;    border-color: var(--white-14);&#10;    transform: translateY(-2px);&#10;}&#10;&#10;.contact-icon {&#10;    flex-shrink: 0;&#10;    width: 64px;&#10;    height: 64px;&#10;    background: color-mix(in srgb, var(--bg-blur) 70%, rgba(255, 255, 255, 0.2));&#10;    border-radius: 18px;&#10;    border: 1px solid rgba(255, 255, 255, 0.15);&#10;    backdrop-filter: saturate(200%) blur(20px) brightness(1.15);&#10;    box-shadow: &#10;      0 4px 16px rgba(0, 0, 0, 0.3),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.2);&#10;    display: flex;&#10;    align-items: center;&#10;    justify-content: center;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.contact-box:hover .contact-icon {&#10;    background: var(--white-08);&#10;    transform: scale(1.05);&#10;}&#10;&#10;.contact-info {&#10;    flex: 1;&#10;}&#10;&#10;.contact-info h3 {&#10;    font-size: 18px;&#10;    font-weight: 600;&#10;    margin-bottom: 4px;&#10;    color: var(--white);&#10;}&#10;&#10;.contact-info p {&#10;    font-size: 14px;&#10;    color: var(--text-dim);&#10;    margin-bottom: 8px;&#10;}&#10;&#10;.contact-link {&#10;    position: relative;&#10;    display: inline-block;&#10;    padding: 6px 12px;&#10;    background: &#10;      linear-gradient(135deg, &#10;        rgba(27, 16, 58, 0.5) 0%,&#10;        rgba(34, 211, 238, 0.2) 50%,&#10;        rgba(27, 16, 58, 0.4) 100%&#10;      );&#10;    color: var(--white);&#10;    text-decoration: none;&#10;    border-radius: 6px;&#10;    font-size: 14px;&#10;    font-weight: 500;&#10;    border: 1px solid rgba(255, 255, 255, 0.08);&#10;    backdrop-filter: saturate(180%) blur(20px) brightness(1.1) contrast(1.05);&#10;    box-shadow: &#10;      0 4px 16px rgba(0, 0, 0, 0.3),&#10;      0 0 0 1px rgba(255, 255, 255, 0.03),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.1),&#10;      inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;      0 0 20px rgba(34, 211, 238, 0.15);&#10;    transition: all 0.3s ease;&#10;    overflow: hidden;&#10;}&#10;&#10;.contact-link::before {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.2) 20%,&#10;      rgba(27, 16, 58, 0.3) 40%,&#10;      rgba(27, 16, 58, 0.2) 60%,&#10;      rgba(27, 16, 58, 0.3) 80%,&#10;      transparent 100%&#10;    ),&#10;    /* Subtle light positioning */&#10;    radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.15) 0%, transparent 50%),&#10;    radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.1) 0%, transparent 50%);&#10;  border-radius: 6px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  filter: blur(0.5px);&#10;}&#10;&#10;.contact-link::after {&#10;  content: '';&#10;  position: absolute;&#10;  top: 0;&#10;  left: 0;&#10;  right: 0;&#10;  bottom: 0;&#10;  background: &#10;    /* Very subtle liquid distortion */&#10;    linear-gradient(90deg,&#10;      transparent 0%,&#10;      rgba(27, 16, 58, 0.1) 30%,&#10;      rgba(27, 16, 58, 0.15) 50%,&#10;      rgba(27, 16, 58, 0.1) 70%,&#10;      transparent 100%&#10;    ),&#10;    /* Noise texture for the fuzzy, hairy edge effect */&#10;    url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;  border-radius: 6px;&#10;  pointer-events: none;&#10;  z-index: -1;&#10;  opacity: 0.3;&#10;  filter: blur(0.8px);&#10;}&#10;&#10;.contact-link:hover {&#10;    background: &#10;      linear-gradient(135deg, &#10;        rgba(27, 16, 58, 0.6) 0%,&#10;        rgba(34, 211, 238, 0.3) 50%,&#10;        rgba(27, 16, 58, 0.5) 100%&#10;      );&#10;    transform: translateY(-1px);&#10;    box-shadow: &#10;      0 6px 20px rgba(0, 0, 0, 0.4),&#10;      0 0 0 1px rgba(255, 255, 255, 0.05),&#10;      inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;      inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;      0 0 30px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure contact-link content is above the pseudo-elements */&#10;.contact-link &gt; * {&#10;  position: relative;&#10;  z-index: 1;&#10;}&#10;&#10;/* Footer */&#10;.site-footer {&#10;    padding: 40px 0;&#10;    border-top: 1px solid rgba(255, 255, 255, 0.1);&#10;    text-align: center;&#10;    color: #a1a1aa;&#10;    font-size: 14px;&#10;}&#10;&#10;/* Responsive design */&#10;@media (max-width: 768px) {&#10;    .site-header .container {&#10;        flex-direction: column;&#10;        align-items: flex-start;&#10;        gap: 16px;&#10;    }&#10;    &#10;    .actions {&#10;        width: 100%;&#10;        justify-content: center;&#10;        flex-wrap: wrap;&#10;    }&#10;&#10;    .contact-grid {&#10;        grid-template-columns: 1fr;&#10;    }&#10;&#10;    .contact-box {&#10;        flex-direction: column;&#10;        text-align: center;&#10;    }&#10;&#10;    .contact-icon {&#10;        margin-bottom: 8px;&#10;    }&#10;}&#10;&#10;@media (max-width: 480px) {&#10;    .container {&#10;        padding: 0 16px;&#10;    }&#10;&#10;    .contact-box {&#10;        padding: 20px;&#10;    }&#10;&#10;    .actions {&#10;        width: 100%;&#10;        justify-content: center;&#10;    }&#10;&#10;    .btn {&#10;        flex: 1;&#10;        text-align: center;&#10;        min-width: 0;&#10;    }&#10;}&#10;&#10;/* Contact page button sizing adjustments */&#10;.contact-buttons .btn {&#10;    align-self: flex-start;&#10;    min-width: 240px; /* less wide than full width */&#10;    padding: 14px 20px; /* thicker interior padding */&#10;}&#10;&#10;.contact-buttons .btn .btn-content {&#10;    padding: 2px 0; /* slight extra interior breathing room */&#10;}&#10;&#10;/* General glass card styling for consistent effects across the site */&#10;.glass-card {&#10;    background: color-mix(in srgb, var(--bg-blur) 70%, rgba(255, 255, 255, 0.1));&#10;    border: 1px solid rgba(255, 255, 255, 0.15);&#10;    border-radius: 20px;&#10;    backdrop-filter: saturate(180%) blur(20px) brightness(1.1);&#10;    box-shadow: &#10;        0 4px 20px rgba(0, 0, 0, 0.3),&#10;        0 0 0 1px rgba(255, 255, 255, 0.05),&#10;        inset 0 1px 0 rgba(255, 255, 255, 0.1);&#10;}&#10;&#10;/* Repository card liquid glass effect - matching the header style */&#10;.repo-card {&#10;    position: relative;&#10;    border: 1px solid rgba(255, 255, 255, 0.08);&#10;    border-radius: 12px;&#10;    padding: 16px;&#10;    background: &#10;        linear-gradient(135deg, &#10;            rgba(27, 16, 58, 0.4) 0%,&#10;            rgba(34, 211, 238, 0.15) 50%,&#10;            rgba(27, 16, 58, 0.3) 100%&#10;        );&#10;    backdrop-filter: saturate(180%) blur(32px) brightness(1.15) contrast(1.1);&#10;    box-shadow: &#10;        0 8px 32px rgba(0, 0, 0, 0.4),&#10;        0 0 0 1px rgba(255, 255, 255, 0.03),&#10;        inset 0 1px 0 rgba(255, 255, 255, 0.12),&#10;        inset 0 -1px 0 rgba(0, 0, 0, 0.2),&#10;        0 0 40px rgba(34, 211, 238, 0.15);&#10;    overflow: hidden;&#10;    transition: all 0.3s ease;&#10;}&#10;&#10;.repo-card::before {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    right: 0;&#10;    bottom: 0;&#10;    background: &#10;        /* Subtle liquid distortion - much more natural */&#10;        linear-gradient(90deg,&#10;            transparent 0%,&#10;            rgba(27, 16, 58, 0.15) 20%,&#10;            rgba(27, 16, 58, 0.25) 40%,&#10;            rgba(27, 16, 58, 0.15) 60%,&#10;            rgba(27, 16, 58, 0.25) 80%,&#10;            transparent 100%&#10;        ),&#10;        /* Subtle light positioning */&#10;        radial-gradient(circle at 20% 80%, rgba(34, 211, 238, 0.1) 0%, transparent 50%),&#10;        radial-gradient(circle at 80% 20%, rgba(99, 102, 241, 0.08) 0%, transparent 50%);&#10;    border-radius: 12px;&#10;    pointer-events: none;&#10;    z-index: -1;&#10;    filter: blur(0.5px);&#10;}&#10;&#10;.repo-card::after {&#10;    content: '';&#10;    position: absolute;&#10;    top: 0;&#10;    left: 0;&#10;    right: 0;&#10;    bottom: 0;&#10;    background: &#10;        /* Very subtle liquid distortion - barely visible */&#10;        linear-gradient(90deg,&#10;            transparent 0%,&#10;            rgba(27, 16, 58, 0.08) 30%,&#10;            rgba(27, 16, 58, 0.12) 50%,&#10;            rgba(27, 16, 58, 0.08) 70%,&#10;            transparent 100%&#10;        ),&#10;        /* Noise texture for the fuzzy, hairy edge effect */&#10;        url(&quot;data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.2' numOctaves='3' stitchTiles='stitch'/%3E%3CfeColorMatrix type='matrix' values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.08 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.6'/%3E%3C/svg%3E&quot;);&#10;    border-radius: 12px;&#10;    pointer-events: none;&#10;    z-index: -1;&#10;    opacity: 0.4;&#10;    filter: blur(0.8px);&#10;}&#10;&#10;.repo-card:hover {&#10;    transform: translateY(-2px);&#10;    box-shadow: &#10;        0 12px 40px rgba(0, 0, 0, 0.5),&#10;        0 0 0 1px rgba(255, 255, 255, 0.05),&#10;        inset 0 1px 0 rgba(255, 255, 255, 0.15),&#10;        inset 0 -1px 0 rgba(0, 0, 0, 0.25),&#10;        0 0 50px rgba(34, 211, 238, 0.2);&#10;}&#10;&#10;/* Ensure repository card content is above the pseudo-elements */&#10;.repo-card &gt; * {&#10;    position: relative;&#10;    z-index: 1;&#10;}&#10;&#10;/* Glass effect for muted sections */&#10;.section.muted {&#10;    background: color-mix(in srgb, var(--muted) 80%, rgba(255, 255, 255, 0.05));&#10;    backdrop-filter: saturate(180%) blur(15px) brightness(1.05);&#10;    border: 1px solid rgba(255, 255, 255, 0.08);&#10;    border-radius: 20px;&#10;    margin: 0 20px;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/contact.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/contact.html" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;Contact Me&lt;/title&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;meta name=&quot;description&quot; content=&quot;Get in touch with Yusuf Siddiqui. Email, phone, and GitHub profile.&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; href=&quot;{{ url_for('static', filename='favicon.svg') }}?v={{ ASSET_VERSION }}&quot; type=&quot;image/svg+xml&quot;&gt;&#10;  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='style.css') }}?v={{ ASSET_VERSION }}&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;header class=&quot;site-header&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;div class=&quot;brand&quot;&gt;&#10;        &lt;a href=&quot;{{ url_for('home') }}&quot; class=&quot;logo-link&quot; aria-label=&quot;Home&quot;&gt;&#10;          &lt;img class=&quot;logo&quot; src=&quot;{{ url_for('static', filename='favicon.svg') }}&quot; alt=&quot;YS logo&quot;&gt;&#10;        &lt;/a&gt;&#10;        &lt;div class=&quot;brand-text&quot;&gt;&#10;          &lt;h1 class=&quot;site-title&quot;&gt;Contact Yusuf&lt;/h1&gt;&#10;          &lt;p class=&quot;site-subtitle&quot;&gt;Get in touch&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav class=&quot;actions&quot;&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('home') }}&quot;&gt;Home&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;View my projects&lt;/a&gt;&#10;        &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;          &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;            &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;              &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;span&gt;View GitHub Profile&lt;/span&gt;&#10;          &lt;/span&gt;&#10;        &lt;/a&gt;&#10;      &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;main&gt;&#10;    &lt;section class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 style=&quot;margin-top:0;&quot;&gt;Contact Information&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;Feel free to reach out using any of the methods below.&lt;/p&gt;&#10;&#10;        &lt;div style=&quot;margin-top:16px;border:1px solid rgba(255,255,255,.08);border-radius:12px;padding:16px;background:rgba(255,255,255,.03);&quot;&gt;&#10;          &lt;div class=&quot;contact-buttons&quot; style=&quot;display: flex; flex-direction: column; gap: 12px;&quot;&gt;&#10;            &lt;a class=&quot;btn&quot; href=&quot;mailto:yusufs98783@gmail.com&quot;&gt;&#10;              &lt;span style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                  &lt;path d=&quot;M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-.887.711-1.618 1.598-1.634L12 10.455l10.402-6.632A1.636 1.636 0 0 1 24 5.457z&quot; fill=&quot;currentColor&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                &lt;span&gt;Email: yusufs98783@gmail.com&lt;/span&gt;&#10;              &lt;/span&gt;&#10;            &lt;/a&gt;&#10;&#10;            &lt;a class=&quot;btn&quot; href=&quot;tel:16478529565&quot;&gt;&#10;              &lt;span style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                  &lt;path d=&quot;M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z&quot; fill=&quot;currentColor&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                &lt;span&gt;Phone: 647-852-9565&lt;/span&gt;&#10;              &lt;/span&gt;&#10;            &lt;/a&gt;&#10;&#10;            &lt;a class=&quot;btn&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;              &lt;span style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                  &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                &lt;span&gt;GitHub: Yusuf-Siddiqui-08&lt;/span&gt;&#10;              &lt;/span&gt;&#10;            &lt;/a&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;section class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 style=&quot;margin-top:0;&quot;&gt;Send a message&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;This form stores your message securely and helps me get back to you.&lt;/p&gt;&#10;&#10;        &lt;form id=&quot;contact-form&quot; novalidate style=&quot;max-width:640px;&quot;&gt;&#10;          &lt;div class=&quot;form-field&quot;&gt;&#10;            &lt;label for=&quot;name&quot;&gt;Name&lt;/label&gt;&#10;            &lt;input id=&quot;name&quot; name=&quot;name&quot; type=&quot;text&quot; required maxlength=&quot;120&quot; placeholder=&quot;Your name&quot; class=&quot;input&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;form-field&quot;&gt;&#10;            &lt;label for=&quot;email&quot;&gt;Email&lt;/label&gt;&#10;            &lt;input id=&quot;email&quot; name=&quot;email&quot; type=&quot;email&quot; required maxlength=&quot;200&quot; placeholder=&quot;you@example.com&quot; class=&quot;input&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;form-field&quot;&gt;&#10;            &lt;label for=&quot;message&quot;&gt;Message&lt;/label&gt;&#10;            &lt;textarea id=&quot;message&quot; name=&quot;message&quot; required minlength=&quot;5&quot; maxlength=&quot;5000&quot; rows=&quot;6&quot; placeholder=&quot;How can I help?&quot; class=&quot;textarea&quot;&gt;&lt;/textarea&gt;&#10;          &lt;/div&gt;&#10;          &lt;!-- Honeypot (hidden from users) --&gt;&#10;          &lt;div class=&quot;sr-only&quot; aria-hidden=&quot;true&quot;&gt;&#10;            &lt;label for=&quot;website&quot;&gt;Website&lt;/label&gt;&#10;            &lt;input id=&quot;website&quot; name=&quot;website&quot; type=&quot;text&quot; tabindex=&quot;-1&quot; autocomplete=&quot;off&quot;&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div id=&quot;contact-status&quot; class=&quot;note&quot; role=&quot;status&quot; aria-live=&quot;polite&quot;&gt;&lt;/div&gt;&#10;&#10;          &lt;button id=&quot;contact-submit&quot; type=&quot;submit&quot; class=&quot;btn primary&quot;&gt;Send message&lt;/button&gt;&#10;        &lt;/form&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  &lt;/main&gt;&#10;&#10;  &lt;footer class=&quot;site-footer&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;p&gt;&#10;        Portfolio for university applications and potential employers.&lt;br&gt;&#10;        © &lt;span id=&quot;year&quot;&gt;&lt;/span&gt; Yusuf Siddiqui.&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/footer&gt;&#10;&#10;  &lt;script&gt;&#10;    (function() {&#10;      const form = document.getElementById('contact-form');&#10;      const submitBtn = document.getElementById('contact-submit');&#10;      const statusEl = document.getElementById('contact-status');&#10;      const yearEl = document.getElementById('year');&#10;      if (yearEl) yearEl.textContent = new Date().getFullYear();&#10;      if (!form) return;&#10;&#10;      // Always reference fields explicitly to avoid name collisions on form.*&#10;      const nameEl = document.getElementById('name');&#10;      const emailEl = document.getElementById('email');&#10;      const messageEl = document.getElementById('message');&#10;      const websiteEl = document.getElementById('website');&#10;&#10;      function setStatus(msg, kind) {&#10;        statusEl.textContent = msg || '';&#10;        statusEl.style.color = kind === 'error' ? '#ffb4b4' : 'var(--text-dim)';&#10;      }&#10;&#10;      form.addEventListener('submit', async (e) =&gt; {&#10;        e.preventDefault();&#10;        setStatus('Sending…');&#10;        submitBtn.disabled = true;&#10;&#10;        const name = (nameEl?.value || '').trim();&#10;        const email = (emailEl?.value || '').trim();&#10;        const message = (messageEl?.value || '').trim();&#10;        const website = (websiteEl?.value || '');&#10;&#10;        // Granular validation with clearer feedback&#10;        if (!name) {&#10;          setStatus('Please enter your name.', 'error');&#10;          submitBtn.disabled = false;&#10;          return;&#10;        }&#10;        if (!email) {&#10;          setStatus('Please enter your email address.', 'error');&#10;          submitBtn.disabled = false;&#10;          return;&#10;        }&#10;        if (emailEl &amp;&amp; !emailEl.checkValidity()) {&#10;          setStatus('Please enter a valid email address.', 'error');&#10;          submitBtn.disabled = false;&#10;          return;&#10;        }&#10;        if (message.length &lt; 5) {&#10;          setStatus('Message must be at least 5 characters.', 'error');&#10;          submitBtn.disabled = false;&#10;          return;&#10;        }&#10;&#10;        try {&#10;          const res = await fetch('/api/contact', {&#10;            method: 'POST',&#10;            headers: { 'Content-Type': 'application/json' },&#10;            body: JSON.stringify({ name, email, message, website })&#10;          });&#10;&#10;          const json = await res.json().catch(() =&gt; ({}));&#10;&#10;          if (res.ok &amp;&amp; json.ok) {&#10;            setStatus('Thanks! Your message was sent.');&#10;            form.reset();&#10;          } else if (res.status === 429) {&#10;            setStatus('Rate limited. Please try again in a little while.', 'error');&#10;          } else if (res.status === 400) {&#10;            setStatus('Validation error. Check your inputs and try again.', 'error');&#10;          } else {&#10;            setStatus('Something went wrong. Please try again later.', 'error');&#10;          }&#10;        } catch (err) {&#10;          setStatus('Network error. Please try again.', 'error');&#10;        } finally {&#10;          submitBtn.disabled = false;&#10;        }&#10;      });&#10;    })();&#10;  &lt;/script&gt;&#10;  &lt;script src=&quot;{{ url_for('static', filename='repos.js') }}?v={{ ASSET_VERSION }}&quot; defer&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;Contact Me&lt;/title&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;meta name=&quot;description&quot; content=&quot;Get in touch with Yusuf Siddiqui. Email, phone, and GitHub profile.&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; href=&quot;{{ url_for('static', filename='favicon.svg') }}?v={{ ASSET_VERSION }}&quot; type=&quot;image/svg+xml&quot;&gt;&#10;  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='style.css') }}?v={{ ASSET_VERSION }}&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;header class=&quot;site-header&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;div class=&quot;brand&quot;&gt;&#10;        &lt;a href=&quot;{{ url_for('home') }}&quot; class=&quot;logo-link&quot; aria-label=&quot;Home&quot;&gt;&#10;          &lt;img class=&quot;logo&quot; src=&quot;{{ url_for('static', filename='favicon.svg') }}&quot; alt=&quot;YS logo&quot;&gt;&#10;        &lt;/a&gt;&#10;        &lt;div class=&quot;brand-text&quot;&gt;&#10;          &lt;h1 class=&quot;site-title&quot;&gt;Contact Yusuf&lt;/h1&gt;&#10;          &lt;p class=&quot;site-subtitle&quot;&gt;Get in touch&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav class=&quot;actions&quot;&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('home') }}&quot;&gt;Home&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;View my projects&lt;/a&gt;&#10;        &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;          &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;            &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;              &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;span&gt;View GitHub Profile&lt;/span&gt;&#10;          &lt;/span&gt;&#10;        &lt;/a&gt;&#10;      &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;main&gt;&#10;    &lt;section class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 style=&quot;margin-top:0;&quot;&gt;Contact Information&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;Feel free to reach out using any of the methods below.&lt;/p&gt;&#10;&#10;        &lt;div style=&quot;margin-top:16px;border:1px solid rgba(255,255,255,.08);border-radius:12px;padding:16px;background:rgba(255,255,255,.03);&quot;&gt;&#10;          &lt;div class=&quot;contact-buttons&quot; style=&quot;display: flex; flex-direction: column; gap: 12px;&quot;&gt;&#10;            &lt;a class=&quot;btn&quot; href=&quot;mailto:yusufs98783@gmail.com&quot;&gt;&#10;              &lt;span style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                  &lt;path d=&quot;M24 5.457v13.909c0 .904-.732 1.636-1.636 1.636h-3.819V11.73L12 16.64l-6.545-4.91v9.273H1.636A1.636 1.636 0 0 1 0 19.366V5.457c0-.887.711-1.618 1.598-1.634L12 10.455l10.402-6.632A1.636 1.636 0 0 1 24 5.457z&quot; fill=&quot;currentColor&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                &lt;span&gt;Email: yusufs98783@gmail.com&lt;/span&gt;&#10;              &lt;/span&gt;&#10;            &lt;/a&gt;&#10;&#10;            &lt;a class=&quot;btn&quot; href=&quot;tel:16478529565&quot;&gt;&#10;              &lt;span style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                  &lt;path d=&quot;M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z&quot; fill=&quot;currentColor&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                &lt;span&gt;Phone: 647-852-9565&lt;/span&gt;&#10;              &lt;/span&gt;&#10;            &lt;/a&gt;&#10;&#10;            &lt;a class=&quot;btn&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;              &lt;span style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                  &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;                &lt;/svg&gt;&#10;                &lt;span&gt;GitHub: Yusuf-Siddiqui-08&lt;/span&gt;&#10;              &lt;/span&gt;&#10;            &lt;/a&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;section class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 style=&quot;margin-top:0;&quot;&gt;Send a message&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;This form stores your message securely and helps me get back to you.&lt;/p&gt;&#10;&#10;        &lt;form id=&quot;contact-form&quot; novalidate style=&quot;max-width:640px;&quot;&gt;&#10;          &lt;div class=&quot;form-field&quot;&gt;&#10;            &lt;label for=&quot;name&quot;&gt;Name&lt;/label&gt;&#10;            &lt;input id=&quot;name&quot; name=&quot;name&quot; type=&quot;text&quot; required maxlength=&quot;120&quot; placeholder=&quot;Your name&quot; class=&quot;input&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;form-field&quot;&gt;&#10;            &lt;label for=&quot;email&quot;&gt;Email&lt;/label&gt;&#10;            &lt;input id=&quot;email&quot; name=&quot;email&quot; type=&quot;email&quot; required maxlength=&quot;200&quot; placeholder=&quot;you@example.com&quot; class=&quot;input&quot;&gt;&#10;          &lt;/div&gt;&#10;          &lt;div class=&quot;form-field&quot;&gt;&#10;            &lt;label for=&quot;message&quot;&gt;Message&lt;/label&gt;&#10;            &lt;textarea id=&quot;message&quot; name=&quot;message&quot; required minlength=&quot;5&quot; maxlength=&quot;5000&quot; rows=&quot;6&quot; placeholder=&quot;How can I help?&quot; class=&quot;textarea&quot;&gt;&lt;/textarea&gt;&#10;          &lt;/div&gt;&#10;          &lt;!-- Honeypot (hidden from users) --&gt;&#10;          &lt;div class=&quot;sr-only&quot; aria-hidden=&quot;true&quot;&gt;&#10;            &lt;label for=&quot;website&quot;&gt;Website&lt;/label&gt;&#10;            &lt;input id=&quot;website&quot; name=&quot;website&quot; type=&quot;text&quot; tabindex=&quot;-1&quot; autocomplete=&quot;off&quot;&gt;&#10;          &lt;/div&gt;&#10;&#10;          &lt;div id=&quot;contact-status&quot; class=&quot;note&quot; role=&quot;status&quot; aria-live=&quot;polite&quot;&gt;&lt;/div&gt;&#10;&#10;          &lt;button id=&quot;contact-submit&quot; type=&quot;submit&quot; class=&quot;btn primary&quot;&gt;Send message&lt;/button&gt;&#10;        &lt;/form&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  &lt;/main&gt;&#10;&#10;  &lt;footer class=&quot;site-footer&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;p&gt;&#10;        Portfolio for university applications and potential employers.&lt;br&gt;&#10;        © &lt;span id=&quot;year&quot;&gt;&lt;/span&gt; Yusuf Siddiqui.&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/footer&gt;&#10;&#10;  &lt;script&gt;&#10;    (function() {&#10;      const form = document.getElementById('contact-form');&#10;      const submitBtn = document.getElementById('contact-submit');&#10;      const statusEl = document.getElementById('contact-status');&#10;      const yearEl = document.getElementById('year');&#10;      if (yearEl) yearEl.textContent = new Date().getFullYear();&#10;      if (!form) return;&#10;&#10;      function setStatus(msg, ok = true) {&#10;        if (!statusEl) return;&#10;        statusEl.textContent = msg || '';&#10;        statusEl.style.color = ok ? 'var(--text-dim)' : '#ffb4b4';&#10;      }&#10;&#10;      form.addEventListener('submit', async (e) =&gt; {&#10;        e.preventDefault();&#10;        if (submitBtn) {&#10;          submitBtn.disabled = true;&#10;          submitBtn.textContent = 'Sending…';&#10;        }&#10;        setStatus('Sending your message…');&#10;&#10;        const payload = {&#10;          name: document.getElementById('name')?.value?.trim() || '',&#10;          email: document.getElementById('email')?.value?.trim() || '',&#10;          message: document.getElementById('message')?.value?.trim() || '',&#10;          // Honeypot&#10;          website: document.getElementById('website')?.value || ''&#10;        };&#10;&#10;        try {&#10;          const res = await fetch('/api/contact', {&#10;            method: 'POST',&#10;            headers: { 'Content-Type': 'application/json' },&#10;            body: JSON.stringify(payload),&#10;          });&#10;          const json = await res.json().catch(() =&gt; ({}));&#10;          if (!res.ok || !json.ok) {&#10;            const msg = (json &amp;&amp; json.error === 'validation_error') ? 'Please fill in all fields correctly.' :&#10;                        (json &amp;&amp; json.error === 'rate_limited') ? 'Too many messages from your IP. Please try again later.' :&#10;                        'Something went wrong. Please try again.';&#10;            setStatus(msg, false);&#10;          } else {&#10;            setStatus('Thanks! Your message has been sent.');&#10;            form.reset();&#10;          }&#10;        } catch (err) {&#10;          setStatus('Network error. Please try again later.', false);&#10;        } finally {&#10;          if (submitBtn) {&#10;            submitBtn.disabled = false;&#10;            submitBtn.textContent = 'Send message';&#10;          }&#10;        }&#10;        return false;&#10;      });&#10;    })();&#10;  &lt;/script&gt;&#10;  &lt;script src=&quot;{{ url_for('static', filename='repos.js') }}?v={{ ASSET_VERSION }}&quot; defer&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/index.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/index.html" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;Yusuf's GitHub Projects Portfolio&lt;/title&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;meta name=&quot;description&quot; content=&quot;A curated portfolio of my software projects from GitHub, presented for university admissions reviewers.&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; href=&quot;{{ url_for('static', filename='favicon.svg') }}?v={{ ASSET_VERSION }}&quot; type=&quot;image/svg+xml&quot;&gt;&#10;  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='style.css') }}?v={{ ASSET_VERSION }}&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;header class=&quot;site-header&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;div class=&quot;brand&quot;&gt;&#10;        &lt;a href=&quot;{{ url_for('home') }}&quot; class=&quot;logo-link&quot; aria-label=&quot;Home&quot;&gt;&#10;          &lt;img class=&quot;logo&quot; src=&quot;{{ url_for('static', filename='favicon.svg') }}&quot; alt=&quot;YS logo&quot;&gt;&#10;        &lt;/a&gt;&#10;        &lt;div class=&quot;brand-text&quot;&gt;&#10;          &lt;h1 class=&quot;site-title&quot;&gt;Contact Yusuf&lt;/h1&gt;&#10;          &lt;p class=&quot;site-subtitle&quot;&gt;Get in touch&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav class=&quot;actions&quot;&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;View my projects&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Contact&lt;/a&gt;&#10;        &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;          &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;            &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;              &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19 .69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;span&gt;View GitHub Profile&lt;/span&gt;&#10;          &lt;/span&gt;&#10;        &lt;/a&gt;&#10;      &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;main&gt;&#10;    &lt;section class=&quot;hero&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 class=&quot;hero-title&quot;&gt;Built to help admissions teams understand my work&lt;/h2&gt;&#10;        &lt;p class=&quot;hero-text&quot;&gt;&#10;          This website showcases a selection of my software projects hosted on GitHub. It is designed specifically for&#10;          university application reviewers to quickly understand my interests, technical strengths, and project impact.&#10;        &lt;/p&gt;&#10;        &lt;div class=&quot;hero-ctas&quot;&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;#about&quot;&gt;Learn More&lt;/a&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;Browse Projects&lt;/a&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Get in touch&lt;/a&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;section id=&quot;about&quot; class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container grid two&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;h3&gt;What you'll find here&lt;/h3&gt;&#10;          &lt;ul class=&quot;feature-list&quot;&gt;&#10;            &lt;li&gt;Selected projects with clear descriptions and what they do&lt;/li&gt;&#10;            &lt;li&gt;Technologies used, design decisions, and import features&lt;/li&gt;&#10;            &lt;li&gt;Links to source code and documentation on GitHub&lt;/li&gt;&#10;            &lt;li&gt;Hobby projects, software and hardware projects, and academic projects&lt;/li&gt;&#10;          &lt;/ul&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;h3&gt;Why it exists&lt;/h3&gt;&#10;          &lt;p&gt;&#10;            GitHub repositories can be dense and technical. This site presents highlights and context so that&#10;            admissions readers can quickly assess the scope, rigor, and outcomes of my work.&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;section class=&quot;section carousel-section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h3 style=&quot;margin-top:0;&quot;&gt;Selected Work&lt;/h3&gt;&#10;        &lt;p class=&quot;note&quot;&gt;A quick visual tour of a few representative projects. Click any image to view it larger.&lt;/p&gt;&#10;&#10;        &lt;div class=&quot;spotlight-grid&quot;&gt;&#10;          &lt;article class=&quot;project-card&quot;&gt;&#10;            &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Titanic-Survival-Using-Machine-Learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;              &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                &lt;h4 class=&quot;spotlight-title&quot;&gt;Titanic Survival Using Machine Learning&lt;/h4&gt;&#10;                &lt;p class=&quot;spotlight-desc&quot;&gt;Based on user-given passenger class, passenger age and passenger gender, and using real Titanic passenger data and Machine Learning, this program will tell you if you are likely to survive.&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;carousel&quot; data-carousel&gt;&#10;              &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                &lt;div class=&quot;carousel-track&quot;&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='1.png') }}&quot; alt=&quot;Titanic ML screenshot 1&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='2.png') }}&quot; alt=&quot;Titanic ML screenshot 2&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='3.png') }}&quot; alt=&quot;Titanic ML screenshot 3&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;              &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;p class=&quot;note&quot; style=&quot;margin-top:10px;&quot;&gt;Tech: Python, Machine Learning, scikit-learn, pandas, numpy&lt;/p&gt;&#10;          &lt;/article&gt;&#10;&#10;          &lt;article class=&quot;project-card&quot;&gt;&#10;            &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Handwritten-Digit-Recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;              &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                &lt;h4 class=&quot;spotlight-title&quot;&gt;Handwritten Digit Recognition&lt;/h4&gt;&#10;                &lt;p class=&quot;spotlight-desc&quot;&gt;A Tkinter handwritten digit recognition app with a custom ML engine. Draw digits for real-time prediction with confidence, give thumbs up/down feedback to improve accuracy, undo, debug tools, array visualization, pattern management, duplicate removal, pattern count display, error-handled pattern storage, autocentering and storage optimization.&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;carousel&quot; data-carousel&gt;&#10;              &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                &lt;div class=&quot;carousel-track&quot;&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='4.png') }}&quot; alt=&quot;Handwritten digit recognition interface&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='5.png') }}&quot; alt=&quot;Digit drawing canvas with prediction&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='6.png') }}&quot; alt=&quot;ML model training visualization&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;              &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;p class=&quot;note&quot; style=&quot;margin-top:10px;&quot;&gt;Focus: GUI, user experience, performance/accuracy&lt;/p&gt;&#10;          &lt;/article&gt;&#10;&#10;          &lt;article class=&quot;project-card&quot;&gt;&#10;            &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Arduino-and-Python-Morse-Translator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;              &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                &lt;h4 class=&quot;spotlight-title&quot;&gt;Arduino and Python Morse Translator&lt;/h4&gt;&#10;                &lt;p class=&quot;spotlight-desc&quot;&gt;A Python project that converts user-input phrases into Morse code and flashes them using an Arduino board. Supports repeated playback and handles letters, numbers, and symbols. Uses pyfirmata2 for Arduino communication.&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;carousel&quot; data-carousel&gt;&#10;              &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                &lt;div class=&quot;carousel-track&quot;&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='9.png') }}&quot; alt=&quot;Arduino Morse code translator setup&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='8.png') }}&quot; alt=&quot;Python Morse code interface&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;              &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;p class=&quot;note&quot; style=&quot;margin-top:10px;&quot;&gt;Highlights: Hardware and Software&lt;/p&gt;&#10;          &lt;/article&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;hero-ctas&quot; style=&quot;margin-top:8px;&quot;&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;Explore all projects&lt;/a&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Contact me&lt;/a&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;  &lt;/main&gt;&#10;&#10;  &lt;footer class=&quot;site-footer&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;p&gt;&#10;        Portfolio for university applications and potential employers.&lt;br&gt;&#10;        © &lt;span id=&quot;year&quot;&gt;&lt;/span&gt; Yusuf Siddiqui.&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/footer&gt;&#10;&#10;  &lt;!-- Image Modal for carousels --&gt;&#10;  &lt;div id=&quot;imageModal&quot; class=&quot;modal&quot; onclick=&quot;closeImageModal()&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot; onclick=&quot;event.stopPropagation()&quot;&gt;&#10;      &lt;span class=&quot;modal-close&quot; onclick=&quot;closeImageModal()&quot; aria-label=&quot;Close&quot;&gt;&amp;times;&lt;/span&gt;&#10;      &lt;img id=&quot;modalImage&quot; alt=&quot;Expanded project screenshot&quot;&gt;&#10;      &lt;div class=&quot;modal-caption&quot;&gt;&lt;p id=&quot;modalCaption&quot;&gt;&lt;/p&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&#10;  &lt;script src=&quot;{{ url_for('static', filename='repos.js') }}?v={{ ASSET_VERSION }}&quot; defer&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;Yusuf's GitHub Projects Portfolio&lt;/title&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;meta name=&quot;description&quot; content=&quot;A curated portfolio of my software projects from GitHub, presented for university admissions reviewers.&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; href=&quot;{{ url_for('static', filename='favicon.svg') }}?v={{ ASSET_VERSION }}&quot; type=&quot;image/svg+xml&quot;&gt;&#10;  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='style.css') }}?v={{ ASSET_VERSION }}&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;header class=&quot;site-header&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;div class=&quot;brand&quot;&gt;&#10;        &lt;a href=&quot;{{ url_for('home') }}&quot; class=&quot;logo-link&quot; aria-label=&quot;Home&quot;&gt;&#10;          &lt;img class=&quot;logo&quot; src=&quot;{{ url_for('static', filename='favicon.svg') }}&quot; alt=&quot;YS logo&quot;&gt;&#10;        &lt;/a&gt;&#10;        &lt;div class=&quot;brand-text&quot;&gt;&#10;          &lt;h1 class=&quot;site-title&quot;&gt;Contact Yusuf&lt;/h1&gt;&#10;          &lt;p class=&quot;site-subtitle&quot;&gt;Get in touch&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav class=&quot;actions&quot;&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;View my projects&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Contact&lt;/a&gt;&#10;        &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;          &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;            &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;              &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19 .69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;span&gt;View GitHub Profile&lt;/span&gt;&#10;          &lt;/span&gt;&#10;        &lt;/a&gt;&#10;      &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;main&gt;&#10;    &lt;section class=&quot;hero&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h2 class=&quot;hero-title&quot;&gt;Built to help admissions teams understand my work&lt;/h2&gt;&#10;        &lt;p class=&quot;hero-text&quot;&gt;&#10;          This website showcases a selection of my software projects hosted on GitHub. It is designed specifically for&#10;          university application reviewers to quickly understand my interests, technical strengths, and project impact.&#10;        &lt;/p&gt;&#10;        &lt;div class=&quot;hero-ctas&quot;&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;#about&quot;&gt;Learn More&lt;/a&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;Browse Projects&lt;/a&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Get in touch&lt;/a&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;section id=&quot;about&quot; class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container grid two&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;h3&gt;What you'll find here&lt;/h3&gt;&#10;          &lt;ul class=&quot;feature-list&quot;&gt;&#10;            &lt;li&gt;Selected projects with clear descriptions and what they do&lt;/li&gt;&#10;            &lt;li&gt;Technologies used, design decisions, and import features&lt;/li&gt;&#10;            &lt;li&gt;Links to source code and documentation on GitHub&lt;/li&gt;&#10;            &lt;li&gt;Hobby projects, software and hardware projects, and academic projects&lt;/li&gt;&#10;          &lt;/ul&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;h3&gt;Why it exists&lt;/h3&gt;&#10;          &lt;p&gt;&#10;            GitHub repositories can be dense and technical. This site presents highlights and context so that&#10;            admissions readers can quickly assess the scope, rigor, and outcomes of my work.&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;    &lt;section class=&quot;section carousel-section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;h3 style=&quot;margin-top:0;&quot;&gt;Selected Work&lt;/h3&gt;&#10;        &lt;p class=&quot;note&quot;&gt;A quick visual tour of a few representative projects. Click any image to view it larger.&lt;/p&gt;&#10;&#10;        &lt;div class=&quot;spotlight-grid&quot;&gt;&#10;          &lt;article class=&quot;project-card&quot;&gt;&#10;            &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Titanic-Survival-Using-Machine-Learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;              &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                &lt;h4 class=&quot;spotlight-title&quot;&gt;Titanic Survival Using Machine Learning&lt;/h4&gt;&#10;                &lt;p class=&quot;spotlight-desc&quot;&gt;Based on user-given passenger class, passenger age and passenger gender, and using real Titanic passenger data and Machine Learning, this program will tell you if you are likely to survive.&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;carousel&quot; data-carousel&gt;&#10;              &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                &lt;div class=&quot;carousel-track&quot;&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='1.png') }}&quot; alt=&quot;Titanic ML app — prediction form with Pclass, Age, and Sex inputs&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='2.png') }}&quot; alt=&quot;Titanic ML — data preprocessing and model training workflow&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='3.png') }}&quot; alt=&quot;Titanic ML — evaluation results and metrics on the test set&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;              &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;p class=&quot;note&quot; style=&quot;margin-top:10px;&quot;&gt;Tech: Python, Machine Learning, scikit-learn, pandas, numpy&lt;/p&gt;&#10;          &lt;/article&gt;&#10;&#10;          &lt;article class=&quot;project-card&quot;&gt;&#10;            &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Handwritten-Digit-Recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;              &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                &lt;h4 class=&quot;spotlight-title&quot;&gt;Handwritten Digit Recognition&lt;/h4&gt;&#10;                &lt;p class=&quot;spotlight-desc&quot;&gt;A Tkinter handwritten digit recognition app with a custom ML engine. Draw digits for real-time prediction with confidence, give thumbs up/down feedback to improve accuracy, undo, debug tools, array visualization, pattern management, duplicate removal, pattern count display, error-handled pattern storage, autocentering and storage optimization.&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;carousel&quot; data-carousel&gt;&#10;              &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                &lt;div class=&quot;carousel-track&quot;&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='4.png') }}&quot; alt=&quot;Handwritten digit recognition interface&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='5.png') }}&quot; alt=&quot;Digit drawing canvas with prediction&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='6.png') }}&quot; alt=&quot;ML model training visualization&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;              &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;p class=&quot;note&quot; style=&quot;margin-top:10px;&quot;&gt;Focus: GUI, user experience, performance/accuracy&lt;/p&gt;&#10;          &lt;/article&gt;&#10;&#10;          &lt;article class=&quot;project-card&quot;&gt;&#10;            &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Arduino-and-Python-Morse-Translator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;              &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                &lt;h4 class=&quot;spotlight-title&quot;&gt;Arduino and Python Morse Translator&lt;/h4&gt;&#10;                &lt;p class=&quot;spotlight-desc&quot;&gt;A Python project that converts user-input phrases into Morse code and flashes them using an Arduino board. Supports repeated playback and handles letters, numbers, and symbols. Uses pyfirmata2 for Arduino communication.&lt;/p&gt;&#10;              &lt;/div&gt;&#10;            &lt;/a&gt;&#10;            &lt;div class=&quot;carousel&quot; data-carousel&gt;&#10;              &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                &lt;div class=&quot;carousel-track&quot;&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='9.png') }}&quot; alt=&quot;Arduino Morse code translator setup&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                  &lt;div class=&quot;slide&quot;&gt;&lt;img loading=&quot;lazy&quot; src=&quot;{{ url_for('project_images', filename='8.png') }}&quot; alt=&quot;Python Morse code interface&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;&gt;&lt;/div&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M15.41 7.41 14 6l-6 6 6 6 1.41-1.41L10.83 12z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;              &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&#10;                &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6z&quot;/&gt;&lt;/svg&gt;&#10;              &lt;/button&gt;&#10;            &lt;/div&gt;&#10;            &lt;p class=&quot;note&quot; style=&quot;margin-top:10px;&quot;&gt;Highlights: Hardware and Software&lt;/p&gt;&#10;          &lt;/article&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;div class=&quot;hero-ctas&quot; style=&quot;margin-top:8px;&quot;&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('repos') }}&quot;&gt;Explore all projects&lt;/a&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Contact me&lt;/a&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;&#10;  &lt;/main&gt;&#10;&#10;  &lt;footer class=&quot;site-footer&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;p&gt;&#10;        Portfolio for university applications and potential employers.&lt;br&gt;&#10;        © &lt;span id=&quot;year&quot;&gt;&lt;/span&gt; Yusuf Siddiqui.&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/footer&gt;&#10;&#10;  &lt;!-- Image Modal for carousels --&gt;&#10;  &lt;div id=&quot;imageModal&quot; class=&quot;modal&quot; onclick=&quot;closeImageModal()&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot; onclick=&quot;event.stopPropagation()&quot;&gt;&#10;      &lt;span class=&quot;modal-close&quot; onclick=&quot;closeImageModal()&quot; aria-label=&quot;Close&quot;&gt;&amp;times;&lt;/span&gt;&#10;      &lt;img id=&quot;modalImage&quot; alt=&quot;Expanded project screenshot&quot;&gt;&#10;      &lt;div class=&quot;modal-caption&quot;&gt;&lt;p id=&quot;modalCaption&quot;&gt;&lt;/p&gt;&lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&#10;  &lt;script src=&quot;{{ url_for('static', filename='repos.js') }}?v={{ ASSET_VERSION }}&quot; defer&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/templates/repos.html">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/templates/repos.html" />
              <option name="originalContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;Yusuf's GitHub Repositories&lt;/title&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;meta name=&quot;description&quot; content=&quot;Live list of GitHub repositories for Yusuf-Siddiqui-08, fetched directly from GitHub.&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; href=&quot;{{ url_for('static', filename='favicon.svg') }}?v={{ ASSET_VERSION }}&quot; type=&quot;image/svg+xml&quot;&gt;&#10;  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='style.css') }}?v={{ ASSET_VERSION }}&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;header class=&quot;site-header&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;div class=&quot;brand&quot;&gt;&#10;        &lt;a href=&quot;{{ url_for('home') }}&quot; class=&quot;logo-link&quot; aria-label=&quot;Home&quot;&gt;&#10;          &lt;img class=&quot;logo&quot; src=&quot;{{ url_for('static', filename='favicon.svg') }}&quot; alt=&quot;YS logo&quot;&gt;&#10;        &lt;/a&gt;&#10;        &lt;div class=&quot;brand-text&quot;&gt;&#10;          &lt;h1 class=&quot;site-title&quot;&gt;Contact Yusuf&lt;/h1&gt;&#10;          &lt;p class=&quot;site-subtitle&quot;&gt;Get in touch&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav class=&quot;actions&quot;&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('home') }}&quot;&gt;Home&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Contact&lt;/a&gt;&#10;        &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;          &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;            &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;              &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;span&gt;View GitHub Profile&lt;/span&gt;&#10;          &lt;/span&gt;&#10;        &lt;/a&gt;&#10;      &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;main&gt;&#10;    &lt;section class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;hero-ctas&quot; style=&quot;margin-bottom: 16px;&quot;&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;#all-projects&quot;&gt;Explore all projects&lt;/a&gt;&#10;          &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08?tab=repositories&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;            &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;              &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;span&gt;View on GitHub&lt;/span&gt;&#10;            &lt;/span&gt;&#10;          &lt;/a&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;h2 style=&quot;margin-top:0;&quot;&gt;Featured Projects&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;Highlighted projects showcasing different aspects of my programming skills and interests.&lt;/p&gt;&#10;&#10;        &lt;!-- Titanic Survival Machine Learning Project --&gt;&#10;        &lt;section class=&quot;section carousel-section muted&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;spotlight-split&quot;&gt;&#10;              &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Titanic-Survival-Using-Machine-Learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;                &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                  &lt;h3 class=&quot;spotlight-title&quot;&gt;Titanic Survival Using Machine Learning&lt;/h3&gt;&#10;                  &lt;p class=&quot;spotlight-desc&quot;&gt;Based on user-given passenger class, passenger age and passenger gender, and using real Titanic passenger data and Machine Learning, this program will tell you if you are likely to survive.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/a&gt;&#10;              &lt;div class=&quot;spotlight-media&quot;&gt;&#10;                &lt;div class=&quot;carousel large&quot; data-carousel&gt;&#10;                  &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                    &lt;div class=&quot;carousel-track&quot;&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='1.png') }}&quot; alt=&quot;Titanic ML screenshot 1&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='2.png') }}&quot; alt=&quot;Titanic ML screenshot 2&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='3.png') }}&quot; alt=&quot;Titanic ML screenshot 3&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                  &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Handwritten Digit Recognition Project --&gt;&#10;        &lt;section class=&quot;section carousel-section&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;spotlight-split&quot;&gt;&#10;              &lt;div class=&quot;spotlight-media&quot;&gt;&#10;                &lt;div class=&quot;carousel large&quot; data-carousel&gt;&#10;                  &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                    &lt;div class=&quot;carousel-track&quot;&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='4.png') }}&quot; alt=&quot;Handwritten digit recognition interface&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='5.png') }}&quot; alt=&quot;Digit drawing canvas with prediction&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='6.png') }}&quot; alt=&quot;ML model training visualization&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                  &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Handwritten-Digit-Recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;                &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                  &lt;h3 class=&quot;spotlight-title&quot;&gt;Handwritten Digit Recognition&lt;/h3&gt;&#10;                  &lt;p class=&quot;spotlight-desc&quot;&gt;A Tkinter handwritten digit recognition app with a custom ML engine. Draw digits for real-time prediction with confidence, give thumbs up/down feedback to improve accuracy, undo, debug tools, array visualization, pattern management, duplicate removal, pattern count display, error-handled pattern storage, autocentering and storage optimization.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/a&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Arduino and Python Morse Translator Project --&gt;&#10;        &lt;section class=&quot;section carousel-section muted&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;spotlight-split&quot;&gt;&#10;              &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Arduino-and-Python-Morse-Translator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;                &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                  &lt;h3 class=&quot;spotlight-title&quot;&gt;Arduino and Python Morse Translator&lt;/h3&gt;&#10;                  &lt;p class=&quot;spotlight-desc&quot;&gt;A Python project that converts user-input phrases into Morse code and flashes them using an Arduino board. Supports repeated playback and handles letters, numbers, and symbols. Uses pyfirmata2 for Arduino communication.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/a&gt;&#10;              &lt;div class=&quot;spotlight-media&quot;&gt;&#10;                &lt;div class=&quot;carousel large&quot; data-carousel&gt;&#10;                  &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                    &lt;div class=&quot;carousel-track&quot;&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='9.png') }}&quot; alt=&quot;Arduino Morse code translator setup&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='8.png') }}&quot; alt=&quot;Python Morse code interface&quot; style=&quot;width:100%;height:100%;object-fit:cover;cursor:pointer;&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                  &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;h2 id=&quot;all-projects&quot; style=&quot;margin-top:24px;&quot;&gt;My Repositories&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;This list is retrieved using a GET request to the GitHub API when the page loads.&lt;/p&gt;&#10;&#10;        &lt;div id=&quot;status&quot; class=&quot;note&quot;&gt;Loading repositories…&lt;/div&gt;&#10;        &lt;div id=&quot;repo-container&quot; class=&quot;grid two&quot; style=&quot;margin-top: 16px;&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  &lt;/main&gt;&#10;&#10;  &lt;!-- Image Modal --&gt;&#10;  &lt;div id=&quot;imageModal&quot; class=&quot;modal&quot; onclick=&quot;closeImageModal()&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot; onclick=&quot;event.stopPropagation()&quot;&gt;&#10;      &lt;span class=&quot;modal-close&quot; onclick=&quot;closeImageModal()&quot;&gt;&amp;times;&lt;/span&gt;&#10;      &lt;img id=&quot;modalImage&quot; src=&quot;&quot; alt=&quot;&quot; /&gt;&#10;      &lt;div class=&quot;modal-caption&quot;&gt;&#10;        &lt;p id=&quot;modalCaption&quot;&gt;&lt;/p&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&#10;  &lt;footer class=&quot;site-footer&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;p&gt;&#10;        Portfolio for university applications and potential employers.&lt;br&gt;&#10;        © &lt;span id=&quot;year&quot;&gt;&lt;/span&gt; Yusuf Siddiqui.&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/footer&gt;&#10;&#10;  &lt;script src=&quot;{{ url_for('static', filename='repos.js') }}?v={{ ASSET_VERSION }}&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;!doctype html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;  &lt;meta charset=&quot;utf-8&quot;&gt;&#10;  &lt;title&gt;Yusuf's GitHub Repositories&lt;/title&gt;&#10;  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&#10;  &lt;meta name=&quot;description&quot; content=&quot;Live list of GitHub repositories for Yusuf-Siddiqui-08, fetched directly from GitHub.&quot;&gt;&#10;  &lt;link rel=&quot;icon&quot; href=&quot;{{ url_for('static', filename='favicon.svg') }}?v={{ ASSET_VERSION }}&quot; type=&quot;image/svg+xml&quot;&gt;&#10;  &lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;Repo updates RSS&quot; href=&quot;/feed.xml&quot;&gt;&#10;  &lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for('static', filename='style.css') }}?v={{ ASSET_VERSION }}&quot;&gt;&#10;&lt;/head&gt;&#10;&lt;body&gt;&#10;  &lt;header class=&quot;site-header&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;div class=&quot;brand&quot;&gt;&#10;        &lt;a href=&quot;{{ url_for('home') }}&quot; class=&quot;logo-link&quot; aria-label=&quot;Home&quot;&gt;&#10;          &lt;img class=&quot;logo&quot; src=&quot;{{ url_for('static', filename='favicon.svg') }}&quot; alt=&quot;YS logo&quot;&gt;&#10;        &lt;/a&gt;&#10;        &lt;div class=&quot;brand-text&quot;&gt;&#10;          &lt;h1 class=&quot;site-title&quot;&gt;Contact Yusuf&lt;/h1&gt;&#10;          &lt;p class=&quot;site-subtitle&quot;&gt;Get in touch&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav class=&quot;actions&quot;&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('home') }}&quot;&gt;Home&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;{{ url_for('contact') }}&quot;&gt;Contact&lt;/a&gt;&#10;        &lt;a class=&quot;btn&quot; href=&quot;/feed.xml&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RSS feed&lt;/a&gt;&#10;        &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;          &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;            &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;              &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;            &lt;/svg&gt;&#10;            &lt;span&gt;View GitHub Profile&lt;/span&gt;&#10;          &lt;/span&gt;&#10;        &lt;/a&gt;&#10;      &lt;/nav&gt;&#10;    &lt;/div&gt;&#10;  &lt;/header&gt;&#10;&#10;  &lt;main&gt;&#10;    &lt;section class=&quot;section&quot;&gt;&#10;      &lt;div class=&quot;container&quot;&gt;&#10;        &lt;div class=&quot;hero-ctas&quot; style=&quot;margin-bottom: 16px;&quot;&gt;&#10;          &lt;a class=&quot;btn&quot; href=&quot;#all-projects&quot;&gt;Explore all projects&lt;/a&gt;&#10;          &lt;a class=&quot;btn primary&quot; href=&quot;https://github.com/Yusuf-Siddiqui-08?tab=repositories&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&#10;            &lt;span aria-hidden=&quot;true&quot; style=&quot;display:inline-flex;align-items:center;gap:8px;&quot;&gt;&#10;              &lt;svg width=&quot;18&quot; height=&quot;18&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;currentColor&quot; aria-hidden=&quot;true&quot;&gt;&#10;                &lt;path d=&quot;M12 .5C5.73.5.98 5.24.98 11.52c0 4.86 3.15 8.99 7.51 10.45.55.1.75-.24.75-.54 0-.27-.01-1.16-.02-2.1-3.06.67-3.71-1.3-3.71-1.3-.5-1.27-1.23-1.61-1.23-1.61-.99-.68.08-.66.08-.66 1.09.08 1.66 1.12 1.66 1.12.98 1.67 2.58 1.19 3.2.91.1-.71.38-1.19.69-1.46-2.44-.28-5-1.22-5-5.44 0-1.2.43-2.19 1.13-2.97-.11-.28-.49-1.41.11-2.94 0 0 .93-.3 3.05 1.13a10.6 10.6 0 0 1 2.78-.37c.94 0 1.88.13 2.77.37 2.12-1.43 3.05-1.13 3.05-1.13.6 1.53.22 2.66.11 2.94.7.78 1.13 1.77 1.13 2.97 0 4.23-2.56 5.16-5 5.44.39.33.74.98.74 1.98 0 1.43-.01 2.58-.01 2.93 0 .3.2.65.76.54 4.35-1.46 7.5-5.59 7.5-10.45C23.02 5.24 18.27.5 12 .5z&quot;/&gt;&#10;              &lt;/svg&gt;&#10;              &lt;span&gt;View on GitHub&lt;/span&gt;&#10;            &lt;/span&gt;&#10;          &lt;/a&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;h2 style=&quot;margin-top:0;&quot;&gt;Featured Projects&lt;/h2&gt;&#10;        &lt;p class=&quot;note&quot;&gt;Highlighted projects showcasing different aspects of my programming skills and interests.&lt;/p&gt;&#10;&#10;        &lt;!-- Titanic Survival Machine Learning Project --&gt;&#10;        &lt;section class=&quot;section carousel-section muted&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;spotlight-split&quot;&gt;&#10;              &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Titanic-Survival-Using-Machine-Learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;                &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                  &lt;h3 class=&quot;spotlight-title&quot;&gt;Titanic Survival Using Machine Learning&lt;/h3&gt;&#10;                  &lt;p class=&quot;spotlight-desc&quot;&gt;Based on user-given passenger class, passenger age and passenger gender, and using real Titanic passenger data and Machine Learning, this program will tell you if you are likely to survive.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/a&gt;&#10;              &lt;div class=&quot;spotlight-media&quot;&gt;&#10;                &lt;div class=&quot;carousel large&quot; data-carousel&gt;&#10;                  &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                    &lt;div class=&quot;carousel-track&quot;&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='1.png') }}&quot; alt=&quot;Titanic ML app — prediction form with Pclass, Age, and Sex inputs&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='2.png') }}&quot; alt=&quot;Titanic ML — data preprocessing and model training workflow&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='3.png') }}&quot; alt=&quot;Titanic ML — evaluation results and metrics on the test set&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                  &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Handwritten Digit Recognition Project --&gt;&#10;        &lt;section class=&quot;section carousel-section&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;spotlight-split&quot;&gt;&#10;              &lt;div class=&quot;spotlight-media&quot;&gt;&#10;                &lt;div class=&quot;carousel large&quot; data-carousel&gt;&#10;                  &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                    &lt;div class=&quot;carousel-track&quot;&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='4.png') }}&quot; alt=&quot;Handwritten digit recognition interface&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='5.png') }}&quot; alt=&quot;Digit drawing canvas with prediction&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='6.png') }}&quot; alt=&quot;ML model training visualization&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                  &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;              &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Handwritten-Digit-Recognition&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;                &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                  &lt;h3 class=&quot;spotlight-title&quot;&gt;Handwritten Digit Recognition&lt;/h3&gt;&#10;                  &lt;p class=&quot;spotlight-desc&quot;&gt;A Tkinter handwritten digit recognition app with a custom ML engine. Draw digits for real-time prediction with confidence, give thumbs up/down feedback to improve accuracy, undo, debug tools, array visualization, pattern management, duplicate removal, pattern count display, error-handled pattern storage, autocentering and storage optimization.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/a&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;!-- Arduino and Python Morse Translator Project --&gt;&#10;        &lt;section class=&quot;section carousel-section muted&quot;&gt;&#10;          &lt;div class=&quot;container&quot;&gt;&#10;            &lt;div class=&quot;spotlight-split&quot;&gt;&#10;              &lt;a href=&quot;https://github.com/Yusuf-Siddiqui-08/Arduino-and-Python-Morse-Translator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; class=&quot;spotlight-text-link&quot;&gt;&#10;                &lt;div class=&quot;spotlight-text&quot;&gt;&#10;                  &lt;h3 class=&quot;spotlight-title&quot;&gt;Arduino and Python Morse Translator&lt;/h3&gt;&#10;                  &lt;p class=&quot;spotlight-desc&quot;&gt;A Python project that converts user-input phrases into Morse code and flashes them using an Arduino board. Supports repeated playback and handles letters, numbers, and symbols. Uses pyfirmata2 for Arduino communication.&lt;/p&gt;&#10;                &lt;/div&gt;&#10;              &lt;/a&gt;&#10;              &lt;div class=&quot;spotlight-media&quot;&gt;&#10;                &lt;div class=&quot;carousel large&quot; data-carousel&gt;&#10;                  &lt;div class=&quot;carousel-viewport&quot;&gt;&#10;                    &lt;div class=&quot;carousel-track&quot;&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='9.png') }}&quot; alt=&quot;Arduino Morse code translator setup&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div class=&quot;slide&quot;&gt;&#10;                        &lt;img src=&quot;{{ url_for('project_images', filename='8.png') }}&quot; alt=&quot;Python Morse code interface&quot; style=&quot;width:100%;height:100%;object-fit:cover;cursor:pointer;&quot; onclick=&quot;openImageModal(this.src, this.alt)&quot;/&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;button class=&quot;carousel-btn prev&quot; aria-label=&quot;Previous slide&quot;&gt;&amp;#8249;&lt;/button&gt;&#10;                  &lt;button class=&quot;carousel-btn next&quot; aria-label=&quot;Next slide&quot;&gt;&amp;#8250;&lt;/button&gt;&#10;                &lt;/div&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        &lt;/section&gt;&#10;&#10;        &lt;h2 id=&quot;all-projects&quot; style=&quot;margin-top:24px;&quot;&gt;My Repositories&lt;/h2&gt;&#10;        &lt;div class=&quot;repo-search-wrap&quot; style=&quot;margin:12px 0 8px 0;&quot;&gt;&#10;          &lt;label for=&quot;repo-search&quot; class=&quot;sr-only&quot;&gt;Search repositories&lt;/label&gt;&#10;          &lt;input id=&quot;repo-search&quot; type=&quot;search&quot; placeholder=&quot;Search repositories by name, description, language, or topic…&quot; aria-label=&quot;Search repositories&quot; style=&quot;width:100%;max-width:480px;padding:10px 12px;border-radius:10px;border:1px solid rgba(255,255,255,.08);background:rgba(255,255,255,.03);color:var(--text);outline:none;&quot;&gt;&#10;        &lt;/div&gt;&#10;        &lt;p class=&quot;note&quot;&gt;Results are fetched from this site’s API and cached for speed.&lt;/p&gt;&#10;&#10;        &lt;div id=&quot;status&quot; class=&quot;note&quot;&gt;Loading repositories…&lt;/div&gt;&#10;        &lt;div id=&quot;repo-container&quot; class=&quot;grid two&quot; style=&quot;margin-top: 16px;&quot;&gt;&lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/section&gt;&#10;  &lt;/main&gt;&#10;&#10;  &lt;!-- Image Modal --&gt;&#10;  &lt;div id=&quot;imageModal&quot; class=&quot;modal&quot; onclick=&quot;closeImageModal()&quot;&gt;&#10;    &lt;div class=&quot;modal-content&quot; onclick=&quot;event.stopPropagation()&quot;&gt;&#10;      &lt;span class=&quot;modal-close&quot; onclick=&quot;closeImageModal()&quot;&gt;&amp;times;&lt;/span&gt;&#10;      &lt;img id=&quot;modalImage&quot; src=&quot;&quot; alt=&quot;&quot; /&gt;&#10;      &lt;div class=&quot;modal-caption&quot;&gt;&#10;        &lt;p id=&quot;modalCaption&quot;&gt;&lt;/p&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;&#10;  &lt;footer class=&quot;site-footer&quot;&gt;&#10;    &lt;div class=&quot;container&quot;&gt;&#10;      &lt;p&gt;&#10;        Portfolio for university applications and potential employers.&lt;br&gt;&#10;        © &lt;span id=&quot;year&quot;&gt;&lt;/span&gt; Yusuf Siddiqui.&#10;      &lt;/p&gt;&#10;    &lt;/div&gt;&#10;  &lt;/footer&gt;&#10;&#10;  &lt;script src=&quot;{{ url_for('static', filename='repos.js') }}?v={{ ASSET_VERSION }}&quot;&gt;&lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>